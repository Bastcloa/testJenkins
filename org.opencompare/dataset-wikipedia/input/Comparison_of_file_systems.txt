<!--
PLEASE ADD INFO TO THE EMPTY COLUMNS. PLEASE DO NOT DELETE THE COLUMNS BECAUSE THEY'RE EMPTY
-->The following tables compare general and technical information for a number of notable [[file system]]s discussed in the linked articles.

==General information==
{| class="wikitable sortable" style="width: auto; text-align: center; font-size: 95%; table-layout: fixed; line-height:1.25"
|-
! File system
! Creator
! Year<br />introduced
! Original [[operating system]]
! License
|-
! [[DECtape]]
| [[Digital Equipment Corporation|DEC]]
| 1964
| [[PDP-6 Monitor]]
|
|-
! [[Level-D]]
| [[Digital Equipment Corporation|DEC]]
| 1968
| [[TOPS-10]]
|
|-
! [[GEORGE (operating system)|George3]]
| [[International Computers and Tabulators|ICT (later ICL)]]
| 1968
| [[GEORGE 3|George 3]]
|
|-
! [[Files-11|ODS-1]]
| [[Digital Equipment Corporation|DEC]]
| 1972
| [[RSX-11]]
|
|-
! [[RT-11]] file system
| [[Digital Equipment Corporation|DEC]]
| 1973
| [[RT-11]]
|
|-
! DOS ([[GEC 4000 series|GEC]])
| [[The General Electric Company plc|GEC]]
| 1973
| [[Core Operating System]]
|
|-
! [[CP/M file system]]
| [[Gary Kildall]]
| 1974
| [[CP/M]]
|
|-
! [[Version 6 Unix file system|V6FS]]
| [[Bell Labs]]
| 1975
| [[Version 6 Unix]]
|
|-
! [[OS4000]]
| [[The General Electric Company plc|GEC]]
| 1977
| [[OS4000]]
|
|-
! [[8-bit FAT|FAT (8-bit)]]<!-- Microsoft BASIC implemented a 8-bit FAT filesystem, not FAT12. -->
| [[Marc McDonald]], [[Microsoft]]
| 1977
| [[Microsoft Standalone Disk BASIC-80]]
|
|-
! [[Apple DOS|DOS 3.x]]<!-- This is the name of a file system *and* an operating system -->
| [[Apple Computer]]
| 1978
| [[Apple DOS]]
|
|-
! [[Apple Pascal|Pascal]]<!-- This is the name of a file system *and* an operating system -->
| [[Apple Computer]]
| 1978
| [[Apple Pascal]]
|
|-
! [[Commodore DOS|CBM DOS]]
| [[Commodore International|Commodore]]
| 1978
| [[Microsoft BASIC|Microsoft BASIC (for CBM PET)]]
|
|-
! [[Version 7 Unix file system|V7FS]]
| [[Bell Labs]]
| 1979
| [[Version 7 Unix]]
|
|-
! [[Atari DOS|DOS 1.0]]<!-- This is the name of a file system *and* an operating system -->
| [[Atari Corporation]]
| 1979
| [[Atari 8-bit family]]
|
|-
! [[Files-11|ODS-2]]
| [[Digital Equipment Corporation|DEC]]
| 1979
| [[OpenVMS]]
|
|-
! [[FAT12]]
| [[Tim Paterson]], [[Seattle Computer Products]]<!-- Tim Paterson implemented FAT12 for his QDOS aka 86-DOS, which later became MS-DOS/PC DOS. It was based on the 8-bit FAT precursor previously implemented in Microsoft Standalone Disk BASIC. -->
| 1980
| [[86-DOS|QDOS]], [[86-DOS]]
|
|- 
! [[Domain/OS#AEGIS|DOMAIN]] file system
| [[Apollo Computer]]
| 1981
| [[Domain/OS|Domain/OS (Aegis, Domain)]]
|
|- 
![[Andrew File System|AFS]]
| [[Carnegie Mellon University]]
| 1982
| Multiplatform MultoOS<!-- Typo? MultoOS or MultiOS? -->
|
|-
! [[Disc Filing System|DFS]]
| [[Acorn Computers Ltd]]
| 1982
| [[BBC Micro|Acorn BBC Micro]] [[Acorn MOS|MOS]]
|
|-
! [[Advanced Disc Filing System|ADFS]]
| [[Acorn Computers Ltd]]
| 1983
| [[Acorn Electron]] (later [[Arthur]] [[RISC OS]])
|
|-
! [[Berkeley Fast File System|FFS]]
| [[Marshall Kirk McKusick|Kirk McKusick]]
| 1983
| [[BSD|4.2BSD]]
|
|-
! [[PRODOS|ProDOS]]<!-- This is the name of a file system *and* an operating system -->
| [[Apple Computer]]
| 1983
| [[PRODOS|ProDOS 8]]
|
|-
! [[Macintosh File System|MFS]]
| [[Apple Computer]]
| 1984
| [[Mac OS]]
|
|-
! [[FAT16]]<!-- The original FAT16 file system with 16-bit sector entries was introduced with DOS 3.0. However, this is not the big FAT16 variant (aka FAT16B) which we typically (but incorrectly) refer to as "FAT16" today. -->
| [[Microsoft]], [[IBM]]
| 1984
| [[PC DOS 3.0]]/[[MS-DOS 3.0]]
|
|-
! [[Elektronika BK]] tape format
| NPO "Scientific centre" (now [[Sitronics]])
| 1985
| [[Vilnius Basic]], BK monitor program
|
|-
! [[Hierarchical File System|HFS]]
| [[Apple Computer]]
| 1985
| [[Mac OS]]
|
|-
! [[Amiga Old File System|Amiga OFS]]{{ref|54}}
| [[Metacomco]] for [[Commodore International|Commodore]]
| 1985
| [[Amiga OS]]
|
|-
! [[High Sierra Format|High Sierra]]
| [[Ecma International]]
| 1985
| [[MS-DOS]], [[Mac OS]]
|
|-
! [[NetWare File System|NWFS]]
| [[Novell]]
| 1985
| [[Novell NetWare|NetWare 286]]
|
|-
! [[FAT16B]]
| [[Compaq]]
| 1987
| Compaq [[MS-DOS]] 3.31, [[DR DOS]] 3.31<!-- FAT16B (official name), the "big" FAT16 file system variant with 32-bit sector entries we typically (but incorrectly) refer to as "FAT16" today was introduced with Compaq MS-DOS 3.31 in late 1987 and was adopted by DR DOS 3.31 in early 1988. Not to be mixed up with the original FAT16 file system with 16-bit sector entries, which was introduced years earlier. -->
|
|-
! [[MINIX file system|MINIX V1 FS]]
| [[Andrew S. Tanenbaum]]
| 1987
| [[MINIX]] 1.0
|
|-
! [[Amiga Fast File System|Amiga FFS]]
| [[Commodore International|Commodore]]
| 1988
| [[Amiga OS]] 1.3
|
|-
! [[High Performance File System|HPFS]]
| [[IBM]] & [[Microsoft]]
| 1988
| [[OS/2]]
|
|-
! [[ISO 9660|ISO 9660:1988]]
| [[Ecma International]], [[Microsoft]]
| 1988
| [[MS-DOS]], [[Mac OS]], and [[AmigaOS]]
|
|-
! [[JFS file system|JFS1]]
| [[IBM]]
| 1990
| [[IBM AIX (operating system)|AIX]]<ref name="note-11">IBM introduced JFS with the initial release of [[AIX operating system|AIX]] Version 3.1 in 1990. This file system now called JFS1. The new JFS, ported from [[OS/2]] to AIX and Linux, was first shipped in [[OS/2]] Warp Server for e-Business in 1999. It was released as JFS2 on AIX 5L.</ref>
|
|-
! [[Veritas File System|VxFS]]
| [[Veritas Software|VERITAS]], (now [[Symantec]])
| 1991
| developed for [[Unix System Laboratories]], [[HP-UX]]<ref>through OEM agreement</ref>
|
|-
! [[Extended file system|ext]]
| [[Rémy Card]]
| 1992
| [[Linux]]
|
|-
! [[Write Anywhere File Layout|WAFL]]
| [[NetApp]]
| 1992
| Data ONTAP
|
|-
! [[MINIX file system|MINIX V2 FS]]
| [[Andrew S. Tanenbaum]]
| 1992
| [[MINIX]] 1.6 and 2.0
|
|-
! [[AdvFS]]
| [[Digital Equipment Corporation|DEC]]
| 1993<ref>{{citation | url = http://www.ornl.gov/lists/mailing-lists/tru64-unix-managers/1993/10/msg00043.html | chapter = Polycenter File System — HELP | title = Tru64 Unix managers | publisher = ORNL}}</ref>
| [[Digital Unix]]
|
|-
! [[NTFS]] [[NTFS#Versions|Version 1.0]] <!-- FSUtil.exe FSInfo NTFSInfo %SystemDrive% returns the main version -->
| [[Microsoft]], [[Tom Miller (computer programmer)|Tom Miller]], [[Gary Kimura]]
| 1993
| [[Windows NT|Windows NT 3.1]]
| proprietary
|-
! [[Log-structured File System (BSD)|LFS]]
| [[Margo Seltzer]]
| 1993
| [[Sprite operating system|Berkeley Sprite]]
|
|-
! [[ext2]]
| [[Rémy Card]]
| 1993
| [[Linux]], [[Hurd]]
|
|-
! [[Unix File System|UFS1]]
| [[Marshall Kirk McKusick|Kirk McKusick]]
| 1994
| [[BSD|4.4BSD]]
|
|-
! [[XFS]]
| [[Silicon Graphics|SGI]]
| 1994
| [[IRIX]]
|
|-
! HFS (Hierarchical File System)
| [[IBM]]
| 1994
| [[MVS/ESA]] (now [[z/OS]])
|
|-
! [[Rock Ridge]]
| Young Minds Inc.
| 1994
| [[Linux]], [[Mac OS]], [[Amiga OS]], and [[FreeBSD]]
|
|-
! [[Joliet (file system)|Joliet ("CDFS")]]
| [[Microsoft]]
| 1995
| [[Microsoft Windows]], [[Linux]], [[Mac OS]], and [[FreeBSD]]
|
|-
! [[Professional File System|PFS]]
| Michiel Pelt
| 1996
| [[AmigaOS]]
|
|-
! [[Romeo (file system)|Romeo]]
| [[Adaptec]]
| 1996
| [[Microsoft Windows]]
|
|-
! [[Universal Disk Format|UDF]]
| [[International Organization for Standardization|ISO]]/[[Ecma International|ECMA]]/[[Optical Storage Technology Association|OSTA]]
| 1995
| -
|
|-
! [[FAT32]]
| [[Microsoft]]
| 1996
| [[Windows 95]]b<ref name="note-10">[[Microsoft]] first introduced FAT32 in [[Windows 95]] OSR2 (OEM Service Release 2) and then later in [[Windows 98]]. NT-based Windows did not have ''any'' support for FAT32 up to Windows NT4; Windows 2000 was the first NT-based Windows OS that received the ability to work with it.</ref>
|
|-
! [[QFS]]
| LSC Inc, [[Sun Microsystems]]
| 1996
| [[Solaris (operating system)|Solaris]]
|
|-
! [[IBM Spectrum Scale]]
| [[IBM]]
| 1998
| [[IBM AIX (operating system)|AIX]], [[Linux]], [[Microsoft Windows|Windows]]
|
|-
! [[Be File System]]
| [[Be Inc.]], [[Dominic Giampaolo|D. Giampaolo]], [[Cyril Meurillon|C. Meurillon]]
| 1996
| [[BeOS]]
|
|-
! [[HFS Plus]]
| [[Apple Computer]]
| 1998
| [[Mac OS 8|Mac OS 8.1]]
|
|-
! [[Novell Storage Services|NSS]]
| [[Novell]]
| 1998
| [[Novell NetWare|NetWare 5]]
|
|-
! [[PolyServe File System (PSFS)]]
| [[PolyServe]]
| 1998
| [[Microsoft Windows|Windows]], [[Linux]]
|
|-
! [[Files-11|ODS-5]]
| [[Digital Equipment Corporation|DEC]]
| 1998
| [[OpenVMS]] 7.2
|
|-
! [[Smart File System|SFS]]
| John Hendrikx
| 1998
| [[AmigaOS]], [[AROS]], [[MorphOS]]
|
|-
! [[ext3]]
| [[Stephen Tweedie]]
| 1999
| [[Linux]]
|
|-
! [[ISO 9660|ISO 9660:1999]]
| [[Ecma International]], [[Microsoft]]
| 1999
| [[Microsoft Windows]], [[Linux]], [[Mac OS X]], [[FreeBSD]], and [[AmigaOS]]
|
|-
! [[JFS file system|JFS]]
| [[IBM]]
| 1999
| [[OS/2]] Warp Server for e-business
|
|-
! [[Global File System|GFS]]
| [[Sistina Software|Sistina]] ([[Red Hat]])
| 2000
| [[Linux]]
|
|-
! [[Melio FS]]
| [[Sanbolic]]
| 2001
| [[Microsoft Windows|Windows]]
|
|-
! [[NTFS]] [[NTFS#Versions|Version 3.1]]<!-- FSUtil.exe FSInfo NTFSInfo %SystemDrive% returns the main version -->
| [[Microsoft]]
| 2001
| [[Windows XP]]
| proprietary
|-
! [[ReiserFS]]
| [[Namesys]]
| 2001
| [[Linux]]
|
|-
! [[zFS (IBM file system)|zFS]]
| [[IBM]]
| 2001
| [[z/OS]] (backported to [[OS/390]])
|
|-
! [[FATX]]
| [[Microsoft]]
| 2002
| [[Xbox (console)|Xbox]]
|
|-
! [[Unix File System|UFS2]]
| [[Marshall Kirk McKusick|Kirk McKusick]]
| 2002
| [[FreeBSD]] 5.0
|
|-
! [[Lustre (file system)|Lustre]]
| [[Cluster File Systems]] (later [[Oracle Corporation]])
| 2002
| [[Linux]]
|
|-
! [[OCFS]]
| [[Oracle Corporation]]
| 2002
| [[Linux]]
|
|-
! [[VMware VMFS|VMFS2]]
| [[VMware]]
| 2002
| [[VMware ESX Server]] 2.0
|
|-
! [[ext3cow]]
| [[Zachary Peterson]]
| 2003
| [[Linux]]
|
|-
! [[Fossil (file system)|Fossil]]
| [[Bell Labs]]
| 2003
| [[Plan 9 from Bell Labs]], 4th Edition
| [[Lucent Public License|LPL]]
|-
! [[Google File System]]
| [[Google]]
| 2003
| [[Linux]]
|
|-
! [[PramFS]]
| [[MontaVista]]
| 2003
| [[Linux]]
|
|-
| [[Reliance (file system)|Reliance]]<ref name="relspec">Specifications for the Reliance file systems are available here [http://www.datalight.com/products/filesystems/reliance-family-specifications].</ref>
| [[Datalight]]
| 2003
| [[Windows CE]], [[VxWorks]], custom ports
|
|-
! [[Veritas Cluster File System|VxCFS]]
| [[Veritas Software|VERITAS]], (now [[Symantec]])
| 2004
| [[AIX]], [[HP-UX]], [[Solaris (operating system)|Solaris]], [[Linux]]
|
|-
! [[ZFS]]
| [[Sun Microsystems]]
| 2004
| [[Solaris (operating system)|Solaris]]
| [[CDDL]]
|-
! [[Reiser4]]
| [[Namesys]]
| 2004
| [[Linux]]
|
|-
! [[Non-Volatile File System]]
| [[Palm, Inc.]]
| 2004
| [[Palm OS Garnet]]
|
|-
! [[MINIX file system|MINIX V3 FS]]
| [[Andrew S. Tanenbaum]]
| 2005
| [[MINIX 3]]
|
|-
! [[OCFS2]]
| [[Oracle Corporation]]
| 2005
| [[Linux]]
|
|-
! [[NILFS]]
| [[Nippon Telegraph and Telephone|NTT]]
| 2005
| [[Linux]]
|
|-
! [[VMware VMFS|VMFS3]]
| [[VMware]]
| 2005
| VMware ESX Server 3.0
|
|-
! [[Global File System 2|GFS2]]
| [[Red Hat]]
| 2006
| [[Linux]]
|
|-
! [[ext4]]
| Various
| 2006
| [[Linux]]
|
|-
! [[exFAT]]
| [[Microsoft]]
| 2006, 2009
| [[Windows CE 6.0]], [[Windows XP|Windows XP SP3]], [[Windows Vista|Windows Vista SP1]]
| proprietary
|-
! [[Transaction-Safe FAT File System|TexFAT/TFAT]]
| [[Microsoft]]
| 2006
| [[Windows CE 6.0]]
|
|-
! [[Btrfs]]
| [[Oracle Corporation]]
| 2007
| [[Linux]]
| [[GPL]]
|-
! [[Ceph (software)|Ceph]]
| [[Sage Weil]], [[Inktank Storage]], [[Red Hat]]
| 2007, 2012
| [[Linux]]
|
|-
! [[WBFS]]
| kwiirk and Waninkoko (Wii homebrew)|kwiirk and Waninkoko (Wii homebrew)
| 2008
| [[Nintendo WII]]
|
|-
! [[HAMMER]]
| [[Matthew Dillon (computer scientist)|Matthew Dillon]]
| 2008
| [[DragonFly BSD]]
|
|-
! [[Tux3]]
| Various
| 2008
| [[Linux]]
|
|-
! [[UBIFS]]
| [[Nokia]] with help of [[University of Szeged]]
| 2008
| [[Linux]]
|
|-
! [[Oracle ACFS]]
| [[Oracle Corporation]]
| 2009
| [[Linux]] - [[Red Hat Enterprise Linux]] 5 and [[Oracle Enterprise Linux]] 5 only
|
|-
! [[Reliance Nitro]]<ref name="relspec" />
| [[Datalight]]
| 2009
| [[Windows CE]], [[Windows Mobile]], [[VxWorks]], [[Linux]], custom ports
| proprietary
|-
! [[LTFS]]
| [[IBM]]
| 2010
| [[Linux]], [[Mac OS X]], planned [[Microsoft Windows]],
| [[LGPL]]
|-
! IlesfayFS
|[[Ilesfay Technology Group]]
| 2011
| [[Microsoft Windows]], planned [[Red Hat Enterprise Linux]]
|
|-
! [[VMware VMFS|VMFS5]]
| [[VMware]]
| 2011
| VMware ESXi 5.0tux 3 stats
|
|-
! [[ReFS]]
| [[Microsoft]]
| 2012, 2013
| [[Windows 2012 Server]]
| proprietary
|-
! [[Lanyard Filesystem]]
| Dan Luedtke
| 2012
| [[Linux]]
| 
|-
! [[F2FS]]
| [[Samsung]]
| 2012
| [[Linux]]
| [[GPLv2]]
|-
! File system
! Creator
! Year<br />introduced
! Original [[operating system]]
! License
|}

==Limits==
{| class="wikitable sortable" style="width: auto; text-align: center; font-size: smaller; table-layout: fixed; line-height:1.25;"
|-
! File system
! Maximum [[filename]] length
! Allowable characters in directory entries<ref name="note-25">These are the restrictions imposed by the on-disk directory entry structures themselves.  Particular [[Installable File System]] drivers may place restrictions of their own on file and directory names; and particular and [[operating system]]s may also place restrictions of their own, across all filesystems.  [[MS-DOS]], [[Microsoft Windows]], and [[OS/2]] disallow the characters <nowiki>\ / : ? * " > < | and NUL</nowiki> in file and directory names across all filesystems.  [[Unix-like]] systems disallow the characters <nowiki>/ and NUL</nowiki> in file and directory names across all filesystems.</ref>
! Maximum pathname length
! Maximum file size
! Maximum volume size<ref name="note-4">For filesystems that have variable allocation unit (block/cluster) sizes, a range of size are given, indicating the maximum volume sizes for the minimum and the maximum possible allocation unit sizes of the filesystem (e.g. 512 bytes and 128 kB for FAT&nbsp;— which is the cluster size range allowed by the on-disk data structures, although some [[Installable File System]] drivers and [[operating system]]s do not support cluster sizes larger than 32 kB).</ref>
|-
! [[Advanced Disc Filing System|Acorn ADFS]]
| {{ntsh|13}}10 bytes
| {{ntsh|115}}Any [[ISO 8859-1]] character except: <nowiki>SPACE $ & % @ \ ^ : . # * " ¦</nowiki>
| No limit defined
| {{val|512|u=MB}} or {{val|4|u=GB}}<ref name="note-167">While the on-disk filesystem structure uses a 4-byte file length, which allows files up to 4G, the usual disk access APIs use the top three bits of the sector number to specify the drive number, effectively limiting the maximum file size to 512M.</ref>
| {{val|512|u=MB}} or {{val|4|u=GB}}<ref name="note-168">While the on-disk filesystem structure uses a 3-byte sector number, which allows access to 4G of disk space, the usual disk access APIs use the top three bits of the sector number to specify the drive number, effectively limiting the maximum disk size to 512M.</ref>
|-
! [[AdvFS]]
| {{nts|226}} characters
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|16|u=TB}}
| {{val|16|u=TB}}
|-
! [[Apple DOS| Apple DOS 3.x]]
| {{nts|30}} bytes
| {{ntsh|255}}Any byte except NUL
| {{val|30|u=B}}, no subdirectories (105 files per disk)
| {{unk}}
| {{val|140|u=kB}} DOS 3.3 (assuming standard 35 tracks)<br>{{val|113.75|u=kB}} DOS 3.1, 3.2
|-
! [[Apple ProDOS]]
| {{nts|15}} bytes
| {{ntsh|63}}A-Z, a-z, 0-9, and period
| {{nts|64}} B, including slashes<ref>{{cite web|title=ProDOS 8 Technical Reference Manual|url=http://www.easy68k.com/paulrsm/6502/PDOS8TRM.HTM#2.1.1|accessdate=31 May 2013}}</ref><ref>{{cite book|title=Beneath Apple ProDOS|year=1985|publisher=Quality Software|isbn=0-912985-05-4|pages=2–8|url=http://mirrors.apple2.org.za/Apple%20II%20Documentation%20Project/Books/Beneath%20Apple%20ProDOS.pdf}}</ref>
| {{val|16|u=MB}}
| {{val|32|u=MB}}
|-
! [[Be File System|BFS]]
| {{nts|255}} bytes
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|260|u=GB}}<ref name="note-3">Varies wildly according to block size and fragmentation of block allocation groups.</ref>
| {{val|2|u=EB}}
|-
! [[Btrfs]]
| {{nts|255}} bytes
| {{ntsh|255}}Any byte except NUL
| {{unk}}
| {{val|16|u=EB}}
| {{val|16|u=EB}}
|-
! [[Commodore DOS|CBM DOS]]
| {{nts|16}} bytes
| {{ntsh|255}}Any byte except NUL
| Non-hierarchical
| {{val|16|u=MB}}
| {{val|16|u=MB}}
|-
! CP/M file system
| {{ntsh|11}}8.3
| any byte except: <nowiki>SPACE < > . , ; : = ? * [ ] % | ( ) / \</nowiki><ref>The CP/M filesystem itself does have limitations in regard to the allowed filename characters to be used, but officially the following characters are not allowed: <nowiki>SPACE < > . , ; : = ? * [ ] % | ( ) / \</nowiki>. CCP reserves the following characters for special purposes: <nowiki>SPACE , = _ . : ;</nowiki>, PIP additionally reserves: <nowiki>< > [ ]</nowiki>.</ref>
| 16 "user areas", no subdirectories
| {{val|8|u=MB}}<ref name="note=101">{{citation |url=http://groups.google.com/group/comp.os.cpm/browse_thread/thread/ac56a0ae9ed64fd1 | chapter =Maximum CP/M-80 2.2 volume size? | title = comp.os.cpm |publisher= Google Groups |accessdate=2009-10-09}}</ref>
| {{val|8|u=MB}} to 512&nbsp;MB<ref name="note=101" />
|-
! [[DECtape]]
| {{ntsh|9}}6.3
| {{ntsh|36}}A–Z, 0–9
| DTxN:FILNAM.EXT = 15
| {{val|369280|u=B}} (577 * 640)
| {{val|369920|u=B}} (578 * 640)
|-
! DOS ([[GEC 4000 series|GEC]])
| {{nts|8}} bytes
| {{ntsh|36}}A–Z, 0–9
| Non-hierarchical
| {{val|64|u=MB}}
| {{val|64|u=MB}}
|-
! [[Elektronika BK]] tape format
| {{nts|16}} bytes
| {{unk}}
| Non-hierarchical
| {{val|64|u=kB}}
| {{val|800|u=kB}} (approx) per side for 90 min cassette (limited only by tape length)
|-
! [[exFAT]]
| {{ntsh|510}}255 characters<ref>Table "Limits" states a maximum of 255 Unicode characters for the filename [http://msdn.microsoft.com/en-us/library/ee681827(VS.85).aspx]</ref>
| {{ntsh|1114111}}Any [[Unicode]] except NUL
| No limit defined
| {{val|127|u=PB}}
| {{val|64|u=ZB}}, 512&nbsp;TB recommended<ref name="xpkb">{{cite web|url=http://support.microsoft.com/?kbid=955704
|title=KB955704
|date=2009-01-27
|quote=Description of the exFAT file system driver update package [for 32-bit XP]
}}
</ref>
|-
! [[ext2]]
| {{nts|255}} bytes
| {{ntsh|254}}Any byte except NUL<ref name="note-26" /> and /
| No limit defined<ref name="note-12" />
| {{val|2|u=TB}}<ref name="note-4" />
| {{val|32|u=TB}}
|-
! [[ext3]]
| {{nts|255}} bytes
| {{ntsh|254}}Any byte except NUL<ref name="note-26" /> and /
| No limit defined<ref name="note-12" />
| {{val|2|u=TB}}<ref name="note-4" />
| {{val|32|u=TB}}
|-
! [[ext3cow]]
| {{nts|255}} bytes
| {{ntsh|254}}Any byte except NUL,<ref name="note-26" /> / and @
| No limit defined<ref name="note-12" />
| {{val|2|u=TB}}<ref name="note-4" />
| {{val|32|u=TB}}
|-
! [[ext4]]
| {{nts|255}} bytes
| {{ntsh|254}}Any byte except NUL<ref name="note-26" /> and /
| No limit defined<ref name="note-12" />
| {{val|16|u=TB}}<ref name="note-4" /><ref name="ext4-features">{{cite web|url=http://fedoraproject.org/wiki/Interviews/EricSandeen |title=Interviews/EricSandeen |publisher=FedoraProject |date=2008-06-09 |accessdate=2009-10-09}}</ref>
| {{val|1|u=EB}}<ref>[http://e2fsprogs.sourceforge.net/e2fsprogs-release.html#1.42 ext4 1.42] "This release of e2fsprogs has support for file systems > 16 TB"</ref>
|-
! [[Transaction-Safe FAT File System|TexFAT]]
| {{ntsh|494}}247 characters
| {{ntsh|1114111}}Any [[Unicode]] except NUL
| No limit defined
| {{val|2|u=GB}}
| {{val|500|u=GB}} Tested<ref name="texfat">{{cite web|url=http://msdn.microsoft.com/en-us/library/cc907928.aspx
|title=msdn TexFAT File Naming Limitations
|date=2009-10-14
}}
</ref>
|-
! [[F2FS]]
| {{nts|255}} bytes
| {{unk}}
| {{unk}}
| {{val|3.94|u=TB}}
| {{val|16|u=TB}}
|-
! [[FAT12]]
| {{ntsh|11}}[[8.3 filename|8.3]] (255 [[UCS-2]] code units with [[VFAT]] [[Long filename|LFN]]s)<ref name="note-24">Depends on whether the [[FAT12]], [[FAT16]] or [[FAT32]] ''implementation'' has support for [[long filename]]s (LFNs).  Where it does not, as in [[OS/2]], [[MS-DOS]], [[Windows 95]], [[Windows 98]] in DOS-only mode and the Linux "msdos" driver, file names are limited to [[8.3 filename|8.3 format]] of 8-bit characters (space padded in both the basename and extension parts) and may not contain NUL (end-of-directory marker). Short names also do not normally contain lowercase letters. Also note that a few special [[device file|device name]]s should be avoided, as some operating systems (notably DOS and Windows) effectively reserve them.</ref>
| {{ntsh|1114111}}Any byte except for values 0-31, 127 (DEL) and: <nowiki>" * / : < > ? \ | + , . ; = []</nowiki> (lowcase a-z are stored as A-Z). With VFAT LFN any [[Unicode]] except NUL<ref name="note-26" /><ref name="note-24" />
| No limit defined<ref name="note-12" />
| {{val|32|u=MB}} ({{val|256|u=MB}})
| {{val|32|u=MB}} ({{val|256|u=MB}} with 4K sectors and 64 KB clusters)
|-
! [[FAT16]]
| {{ntsh|11}}[[8.3 filename|8.3]] (255 [[UCS-2]] code units with [[VFAT]] [[Long filename|LFN]]s)<ref name="note-24" />
| {{ntsh|1114111}}Any byte except for values 0-31, 127 (DEL) and: <nowiki>" * / : < > ? \ | + , . ; = []</nowiki> (lowcase a-z are stored as A-Z). With VFAT LFN any [[Unicode]] except NUL<ref name="note-26" /><ref name="note-24" />
| No limit defined<ref name="note-12" />
| {{val|2|u=GB}} ({{val|4|u=GB}} with [[Large file support|LFS]])
| {{val|2|u=GB}} or 4&nbsp;GB
|-
! [[FAT32]]
| {{ntsh|11}}[[8.3 filename|8.3]] (255 [[UCS-2]] code units with [[VFAT]] [[Long filename|LFN]]s)<ref name="note-24" />
| {{ntsh|1114111}}Any byte except for values 0-31, 127 (DEL) and: <nowiki>" * / : < > ? \ | + , . ; = []</nowiki> (lowcase a-z are stored as A-Z). With VFAT LFN any [[Unicode]] except NUL<ref name="note-26" /><ref name="note-24" />
| No limit defined<ref name="note-12" />
| {{val|2|u=GB}} ({{val|4|u=GB}} with [[Large file support|LFS]]
| {{val|2|u=TB}}<ref name="note-7">While FAT32 [[partition (computing)|partition]]s this large work fine once created, some software won't allow creation of FAT32 partitions larger than 32 GB.  This includes, notoriously, the [[Windows XP]] installation program and the Disk Management console in Windows 2000, XP, 2003 and Vista. Use [[Fdisk|FDISK]] from a [[Windows Me|Windows ME]] Emergency Boot Disk to avoid. [http://support.microsoft.com/kb/314463]</ref> ({{val|16|u=TB}}<!-- for 4 KB sectors -->)
|-
! [[FATX]]
| {{nts|42}} bytes<ref name="note-24" />
| {{ntsh|108}}ASCII.  [[Unicode]] not permitted.
| No limit defined<ref name="note-12" />
| {{val|2|u=GB}}
| {{val|2|u=GB}}
|-
! [[Berkeley Fast File System|FFS]]
| {{nts|255}} bytes
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|8|u=ZB}}
| {{val|8|u=ZB}}
|-
! [[Fossil (file system)|Fossil]]
| 65535 bytes of UTF-8 characters
| Any Unicode except 0-31
| No limit defined
| 8 EB
| {{unk}}
|-
! [[Global File System|GFS]]
| {{nts|255}}
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|8|u=EB}}<ref name="note-63">Depends on kernel version and arch. For 2.4 kernels the max is 2 TB. For 32-bit 2.6 kernels it is 16 TB. For 64-bit 2.6 kernels it is 8 EB.</ref>
| {{val|8|u=EB}}<ref name="note-63" />
|-
! [[IBM Spectrum Scale (formerly: General Parallel File System)|IBM Spectrum Scale]]
| {{nts|255}} UTF-8 [[codepoint]]s
| {{ntsh|255}}Any byte except NUL<ref name="note-26" /> and /
| No limit defined<ref name="note-12" />
| {{val|8|u=EB}}
| {{val|8|u=YB}} (18&nbsp;PB tested)
|-
! [[HAMMER]]
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{val|1|u=EB}}
|-
! [[Hierarchical File System|HFS]]
| {{nts|31}} bytes
| {{ntsh|255}}Any byte except <nowiki>:</nowiki><ref name="osxhfs">As [[Mac OS X]] is a [[Unix-like]] system, which supports <nowiki>:</nowiki> in file names, and which uses <nowiki>/</nowiki> as a pathname component separator, <nowiki>:</nowiki> in file names is represented on disk in HFS and HFS+ as <nowiki>/</nowiki>.</ref>
| Unlimited
| {{val|2|u=GB}}
| {{val|2|u=TB}}
|-
! [[HFS Plus]]
| {{ntsh|510}}255 UTF-16 code units<ref name="note-1">The Mac OS provides two sets of functions to retrieve file names from an HFS Plus volume, one of them returning the full Unicode names, the other shortened names fitting in the older 31 byte limit to accommodate older applications.</ref>
| {{ntsh|1114112}}Any valid [[Unicode]]<ref name="note-26" /><ref name="note-2">HFS Plus mandates support for an [[escape sequence]] to allow arbitrary Unicode. Users of older software might see the escape sequences instead of the desired characters.</ref>
| Unlimited
| {{val|8|u=EB}}
| {{val|8|u=EB}}<ref name="note-71">{{citation | url = http://docs.info.apple.com/article.html?artnum=25557 | publisher = Apple | title = Docs}}</ref><ref>{{citation | url = http://docs.info.apple.com/article.html?artnum=24601 | title = Docs}}</ref>
|-
! [[High Sierra Format|High Sierra]]
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}|-
|-
! [[High Performance File System|HPFS]]
| {{nts|255}} bytes
| {{ntsh|255}}Any byte except NUL<ref name="note-27">The "." and ".." directory entries in HPFS that are seen by applications programs are a partial fiction created by the [[Installable File System]] drivers.  The on-disk data structure for a directory does not contain entries by those names, but instead contains a special "start" entry.  Whilst on-disk directory entries by those names are not physically prohibited, they cannot be created in normal operation, and a directory containing such entries is corrupt.</ref>
| No limit defined<ref name="note-12" />
| {{val|2|u=GB}}
| {{val|2|u=TB}}<ref name="note-13">This is the limit of the on-disk structures.  The HPFS [[Installable File System]] driver for [[OS/2]] uses the top 5 bits of the volume sector number for its own use, limiting the volume size that it can handle to 64 GB.</ref>
|-
! [[ISO 9660|ISO 9660:1988]]
| {{ntsh|11}}Level&nbsp;1: 8.3,<br />Level&nbsp;2&nbsp;&&nbsp;3: ~&nbsp;180
| Depends on Level<ref>[[ISO 9660#Restrictions]]</ref>
| ~ 180 bytes?
| {{val|4|u=GB}} (Level 1 & 2) to 8&nbsp;TB (Level 3)<ref>Through the use of multi-extents, a file can consist of multiple segments, each up to 4&nbsp;GB in size. See [[ISO 9660#The 2/4 GB file size limit]]</ref>
| {{val|8|u=TB}}<ref>Assuming the typical 2048 Byte sector size. The volume size is specified as a 32-bit value identifying the number of sectors on the volume.</ref>
|-
! [[ISO 9660|ISO 9660:1999]]
| {{ntsh|207}}{{unk}} (207?)
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[Joliet (file system)|Joliet ("CDFS")]]
| {{ntsh|128}}64 [[Unicode]] characters
| {{ntsh|1112058}}All [[UCS-2]] code except <nowiki>* / \ : ; and ?</nowiki><ref>[http://bmrc.berkeley.edu/people/chaffee/jolspec.html Joliet Specification]</ref>
| {{unk}}
| {{val|4|u=GB}} (same as [[ISO 9660|ISO 9660:1988]])
| {{val|8|u=TB}} (same as [[ISO 9660|ISO 9660:1988]])
|-
! [[Lanyard Filesystem]]
| {{nts|255}} bytes
| Any byte except NUL and <nowiki>/</nowiki><ref name="note-26" />
| No limit defined
| {{val|64|u=ZB}}
| {{val|128|u=kB}} to {{val|64|u=ZB}}<ref>https://raw.github.com/danrl/lanyfs-docs/master/lanyfs-1.4.txt</ref>
|-
! [[LEAN]]
| {{nts|4068}} bytes<ref>{{cite web|url=http://freedos-32.sourceforge.net/lean/ |title=LEAN file system |publisher=Freedos-32.sourceforge.net |date= |accessdate=2013-02-05}}</ref>
| {{ntsh|1114112}}case sensitive, in UTF-8 (any Unicode codepoint)
| No limit defined
| {{val|8|u=EB}}
| {{val|8|u=EB}}
|-
! [[Level-D]]
| {{ntsh|9}}6.3
| {{ntsh|36}}A–Z, 0–9
| DEVICE:FILNAM.EXT[PROJECT,PROGRM] = 7 + 10 + 15 = 32; + 5*7 for SFDs = 67
| {{val|24|u=GB}} (34,359,738,368 words (2<sup>35</sup>-1); 206,158,430,208 SIXBIT bytes)
| {{val|12|u=GB}} (approx; 64 * 178 MB)
|-
! [[LTFS]]
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[Lustre (file system)|Lustre]]
| {{nts|255}} bytes
| {{ntsh|255}}Any byte except NUL<ref name="note-26" /> and /
| No limit defined<ref name="note-12" />
| {{val|32|u=PB}} (on [[ext4]])
| {{val|1|u=YB}} (55&nbsp;PB tested)
|-
! [[JFS file system|JFS1]]
| {{nts|255}} bytes
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|8|u=EB}}
| {{val|4|u=PB}}
|-
! [[JFS file system|JFS]]
| {{nts|255}} bytes
| {{ntsh|1114111}}Any [[Unicode]] except NUL
| No limit defined<ref name="note-12" />
| {{val|4|u=PB}}
| {{val|32|u=PB}}
|-
! [[Macintosh File System|MFS]]
| {{nts|255}} bytes
| {{ntsh|255}}Any byte except <nowiki>:</nowiki>
| No path (flat filesystem)
| {{val|226|u=MB}}
| {{val|226|u=MB}}
|-
! [[MicroDOS]] file system
| {{nts|14}} bytes
| {{unk}}
| {{unk}}
| {{val|16|u=MB}}
| {{val|32|u=MB}}
|-
! [[MINIX file system|MINIX V1 FS]]
| {{ntsh|30}}14 or 30 bytes, set at filesystem creation time
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|64|u=MB}}<ref name="minix-filesize">{{cite web|url=http://minix1.woodhull.com/faq/filesize.html |title=File, file system, and memory size limits in Minix |publisher=Minix1.woodhull.com |date= |accessdate=2013-02-05}}</ref>
| {{val|64|u=MB}}<ref name="minix-filesize" />
|-
! [[MINIX file system|MINIX V2 FS]]
| {{ntsh|30}}14 or 30 bytes, set at filesystem creation time
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|4|u=GB}}<ref name="minix-filesize" />
| {{val|1|u=GB}}, then 2 TB<ref name="minix-filesize" />
|-
! [[MINIX file system|MINIX V3 FS]]
| {{nts|60}} bytes
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|4|u=GB}}
| {{val|16|u=TB}}<ref name="minix-filesize" />
|-
! [[NILFS]]
| {{nts|255}} bytes
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|8|u=EB}}
| {{val|8|u=EB}}
|-
! [[Novell Storage Services|NSS]]
| {{nts|226}} characters
| Depends on namespace used<ref name="note-28">NSS allows files to have multiple names, in separate namespaces.</ref>
| Only limited by client
| {{val|8|u=TB}}
| {{val|8|u=TB}}
|-
! [[NTFS]]
| {{ntsh|510}}255 characters<ref name="note-171">NTFS allows files to have multiple names, in separate namespaces: Win32, DOS, Win32&DOS, and Posix. Windows APIs create files with Win32 "long" names (1–255 characters), sometimes with an additional "short"/"alias" DOS name in the [[8.3 filename|"8.3" format]] (12 characters).</ref><ref name="note-172">{{cite web | url = http://dubeyko.com/development/FileSystems/NTFS/ntfsdoc.pdf | title = NTFS Documentation | author = Richard Russon and Yuval Fledel | accessdate = 2011-06-26}}</ref><ref name="note-173">{{cite web|url=http://msdn.microsoft.com/en-us/library/aa365247%28VS.85%29.aspx|title=Naming Files, Paths, and Namespaces (MSDN Library article)}} NB: This article includes discussion of the NT & Win32 namespaces used by Windows APIs; these are distinct from the NTFS filename namespaces.</ref>
| {{ntsh|1114102}}Depends on namespace used<ref name="note-171"/><ref name="note-172"/><ref name="note-173"/><ref name="note-174">In the Win32 namespace, any [[UTF-16]] code unit (case insensitive) except NUL and <nowiki>\ / : * ? " < > |</nowiki> is allowed; in the Posix namespace, any [[UTF-16]] code unit (case sensitive) except NUL and / is allowed; in the DOS namespace, any character in the U+0021–U+007E range except <nowiki>\ / : * ? " < > |</nowiki> is allowed. Windows APIs require Win32 namespace compatibility, which prevents access to folders & files having only Posix names containing Win32-incompatible characters.</ref>
| 32,767 Unicode characters with each path component (directory or filename) commonly up to 255 characters long<ref name="note-12" />
| {{val|16|u=EB}}<ref name="note-55">This is the limit of the on-disk structures.  The NTFS driver for [[Windows NT]] limits the volume size that it can handle to 256 TB and the file size to 16 TB respectively.{{cite web|url=http://technet.microsoft.com/en-us/library/cc781134(v=ws.10).aspx|title=How NTFS Works}}</ref>
| {{val|16|u=EB}}<ref name="note-55" />
|-
! [[NetWare File System|NWFS]]
| {{nts|80}} bytes<ref name="note-52">Some namespaces had lower name length limits. "LONG" had an 80-byte limit, "NWFS" 80 bytes, "NFS" 40 bytes and "DOS" imposed [[8.3 filename]].</ref>
| Depends on namespace used<ref name="note-28" />
| No limit defined<ref name="note-12" />
| {{val|4|u=GB}}
| {{val|1|u=TB}}
|-
! [[OCFS]]
| {{nts|255}} bytes
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|8|u=TB}}
| {{val|8|u=TB}}
|-
! [[OCFS2]]
| {{nts|255}} bytes
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|4|u=PB}}
| {{val|4|u=PB}}
|-
! [[Files-11|ODS-5]]
| {{nts|236}} bytes<ref name="note-15">Maximum combined filename/filetype length is 236 bytes; each component has an individual maximum length of 255 bytes.</ref>
| {{unk}}
| 4,096 bytes<ref name="note-16">Maximum pathname length is 4,096 bytes, but quoted limits on individual components add up to 1,664 bytes.</ref>
| {{val|2|u=TB}}
| {{val|2|u=TB}}
|-
! [[OS4000]]
| {{nts|8}} bytes
| {{ntsh|36}}A–Z, 0–9<br />Period is directory separator
| No limit defined<ref name="note-12" />
| {{val|2|u=GB}}
| {{val|1|u=GB}} (at least)
|-
! [[PramFS]]
| {{nts|31}} bytes
| {{ntsh|31}}Any byte except NUL
| {{unk}}
| {{val|1|u=GB}}
| {{val|8|u=EB}}
|-
! [[QFS]]
| {{nts|255}} bytes
| {{ntsh|254}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|16|u=EB}}<ref name="note-72">QFS allows files to exceed the size of disk when used with its integrated HSM, as only part of the file need reside on disk at any one time.</ref>
| {{val|4|u=PB}}<ref name="note-72" />
|-
! [[ReFS]]
| {{ntsh|32767}} 32,767 Unicode characters (255 Unicode characters in Windows 8/8.1)<ref>{{cite web|url=http://blogs.msdn.com/b/b8/archive/2012/01/16/building-the-next-generation-file-system-for-windows-refs.aspx |title=MSDN Blogs - Resilient File System, Windows 8 RC's filename length reduced (from 32K to 255) with Windows 8 RTM for NTFS compatibility |publisher=Blogs.msdn.com |date=2012-01-16 |accessdate=2013-02-05}}</ref> 
| {{unk}}
| {{ntsh|32767}} 32,767 Unicode characters in each path component
| {{val|16|u=EB}}
| {{val|1|u=YB}} with 64 kB cluster size (2<sup>64</sup> × 64 × 2<sup>10</sup>). Windows stack addressing allows 16 EB
|-
! [[ReiserFS]]
| {{nts|4032}} bytes/226 characters
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|8|u=TB}}<ref name="note-8">ReiserFS has a theoretical maximum file size of 1 EB, but "page cache limits this to 8TB on architectures with 32 bit int"[http://www.namesys.com/faq.html#reiserfsspecs]</ref> (v3.6), 2 GB (v3.5)
| {{val|16|u=TB}}
|-
! [[Reiser4]]
| {{nts|3976}} bytes
| {{ntsh|254}}Any byte except <nowiki>/</nowiki> and NUL
| No limit defined<ref name="note-12" />
| {{val|8|u=TB}} on x86
| {{unk}}
|-
! [[Reliance (file system)|Reliance]]
| {{nts|260}} bytes
| OS specific
| {{val|260|u=B}}
| {{val|4|u=GB}}
| {{val|2|u=TB}}
|-
! [[Reliance Nitro]]
| {{nts|1024}} bytes
| OS specific
| 1024 bytes
| {{val|32|u=TB}}
| {{val|32|u=TB}}
|-
! [[RT-11]]
| {{ntsh|9}}6.3
| {{ntsh|37}}A–Z, 0–9, $
| Non-hierarchical
| {{val|32|u=MB}} (65536 * 512)
| {{val|32|u=MB}}
|-
! IBM SFS
| {{ntsh|16}}8.8
| {{unk}}
| Non-hierarchical<ref>{{cite web|url=http://publib.boulder.ibm.com/infocenter/comphelp/v7v91/index.jsp?topic=/com.ibm.aix.cbl.doc/rpfio50.htm |title=SFS file system |publisher=Publib.boulder.ibm.com |date= |accessdate=2013-02-05}}</ref>
| {{unk}}
| {{unk}}
|-
! [[Universal Disk Format|UDF]]
| {{nts|255}} bytes
| {{ntsh|1114111}}Any [[Unicode]] except NUL
| 1,023 bytes<ref name="note-43">This restriction might be lifted in newer versions.</ref>
| {{val|16|u=EB}}
| {{val|2|u=TB}} (hard disk), 8&nbsp;TB (optical disc)<ref>2<sup>32</sup> × ''block size''</ref><ref>{{cite web |url=https://sites.google.com/site/udfintro/ |title=Wenguang's Introduction to Universal Disk Format (UDF) |at=Section 5.1 Highlight of the UDF Format |author= |date=1 February 2009 |website=Google Sites |accessdate=17 July 2014 }}</ref>
|-
! [[Unix File System|UFS1]]
| {{nts|255}} bytes
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|226|u=TB}}
| {{val|226|u=TB}}
|-
! [[Unix File System|UFS2]]
| {{nts|255}} bytes
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|32|u=PB}}
| {{val|1|u=YB}}
|-
! [[Version 6 Unix file system|V6FS]]
| {{nts|14}} bytes<ref>See manual http://wwwlehre.dhbw-stuttgart.de/~helbig/os/v6/doc/V/dir.html</ref>
| {{ntsh|254}}Any byte except [[Null character|NUL]] and <nowiki>/</nowiki><ref name="note-26">In these filesystems the directory entries named "." and ".." have special status.  Directory entries with these names are not prohibited, and indeed exist as normal directory entries in the on-disk data structures.  However, they are mandatory directory entries, with mandatory values, that are automatically created in each directory when it is created; and directories without them are considered corrupt.</ref>
| No limit defined<ref name="note-12">The on-disk structures have no inherent limit.  Particular [[Installable File System]] drivers and [[operating system]]s may impose limits of their own, however.
MS-DOS/PC DOS do not support full pathnames longer than 66 bytes for FAT12, FAT16 and FAT32 volumes. This limit exists because these operating systems were designed around a fixed-length internal data structure named [[Current Directory Structure]], which holds the absolute paths of the current working directories of all volumes.
The FAT12/FAT16 file system implementation under [[Concurrent DOS]] and [[DR DOS]] 3.31 to 6.0 (prior to 1992 updates) did not impose any such limits on the directory depth due to their internal representation of current working directories as dynamically updated chain of double-linked relative directories. The introduction of a DOS-like [[Current Directory Structure|CDS]] (instead of only an emulation thereof) for compatibility purposes with BDOS 7.0 in 1992 imposed the same length limits on PalmDOS, DR DOS 6.0 (since 1992 update), Novell DOS, OpenDOS, etc. as known from MS-DOS/PC DOS.
Windows NT does not support full pathnames longer than 32,767 bytes for NTFS. Most Windows programs will fail when full path exceeds 255 characters (including Explorer and CMD.EXE). Linux has a pathname limit of 4,096.</ref>
| {{val|16|u=MB}}<ref>See manual http://wwwlehre.dhbw-stuttgart.de/~helbig/os/v6/doc/V/fs.html</ref>
| {{val|2|u=TB}}
|-
! [[Version 7 Unix file system|V7FS]]
| {{nts|14}} bytes<ref>See "dir (5)" in Volume 1 of the manual http://cm.bell-labs.com/7thEdMan/</ref>
| {{ntsh|254}}Any byte except NUL and <nowiki>/</nowiki><ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|1|u=GB}}<ref name="note-58">The actual maximum was 1,082,201,088 bytes, with 10 direct blocks, 1 singly indirect block, 1 doubly indirect block, and 1 triply indirect block. The 4.0[[BSD]] and 4.1[[BSD]] versions, and the [[UNIX System V|System V]] version, used 1,024-byte blocks rather than 512-byte blocks, making the maximum 4,311,812,608 bytes or approximately 4 GB.</ref>
| {{val|2|u=TB}}
|-
! [[Veritas File System|VxFS]]
| {{nts|255}} bytes
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|256|u=TB}}
| {{val|256|u=TB}}
|-
! [[VMware VMFS|VMFS2]]
| {{nts|128}}
| {{ntsh|254}}Any byte except NUL and <nowiki>/</nowiki><ref name="note-26" />
| 2,048
| {{val|4|u=TB}}<ref name="note-74">Maximum file size on a VMFS volume depends on the block size for that VMFS volume. The figures here are obtained by using the maximum block size.</ref>
| {{val|64|u=TB}}
|-
! [[VMware VMFS|VMFS3]]
| {{nts|128}}
| {{ntsh|254}}Any byte except NUL and <nowiki>/</nowiki><ref name="note-26" />
| 2,048
| {{val|2|u=TB}}<ref name="note-74" />
| {{val|64|u=TB}}
|-
! [[XFS]]
| {{nts|255}} bytes<ref>Note that the filename can be much longer [[XFS#Extended attributes]]</ref>
| {{ntsh|255}}Any byte except NUL<ref name="note-26" />
| No limit defined<ref name="note-12" />
| {{val|8|u=EB}}<ref name="note-9">XFS has a limitation under Linux 2.4 of 64 TB file size, but Linux 2.4 only supports a maximum block size of 2 TB.  This limitation is not present under [[IRIX]].</ref>
| {{val|8|u=EB}}<ref name="note-9" />
|-
! [[ZFS]]
| {{nts|255}} bytes
| {{ntsh|1114111}}Any [[Unicode]] except NUL
| No limit defined<ref name="note-12" />
| {{val|16|u=EB}}
| {{val|256|u=ZB}}
|- class="sortbottom"
! File system
! Maximum filename length
! Allowable characters in directory entries<ref name="note-25" />
! Maximum pathname length
! Maximum file size
! Maximum volume size<ref name="note-4" />
|}

==Metadata==
{| class="wikitable sortable" style="width: auto; text-align: center; font-size: smaller; table-layout: fixed; line-height:1.25"
|-
! File system
! Stores file owner
! [[POSIX]] file permissions
! Creation timestamps
! Last access/ read timestamps
! Last content modification timestamps
! Disk copy created
! Last metadata change timestamps
! Last archive timestamps
! [[Access control list]]s
! Security/ [[Mandatory access control|MAC]] labels
! [[Extended attribute]]s/ [[Fork (filesystem)|Alternate data streams/ forks]]
! Checksum/ [[Error-correcting code|ECC]]
! Max Timestamp Resolution
|-
! [[AdvFS]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{unk}}
|-
! [[Be File System]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
|{{unk}}
|{{unk}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{unk}}
|-
! [[Btrfs]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{unk}}
| {{Yes}}
| {{unk}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| 1 nanosecond
|-
! [[Commodore DOS|CBM DOS]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[CP/M]] file system
| {{No}}
| {{No}}
| {{Yes}}<ref>Implemented in later versions as an extension</ref>
| {{No}}
|{{unk}}
|{{unk}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[DECtape]]
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|{{unk}}
|{{unk}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! DOS ([[GEC 4000 series|GEC]])
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Elektronika BK]] tape format
| {{No}}
| {{No}}
| {{No}}
| {{No}}
|{{unk}}
|{{unk}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{unk}}
|-
! [[ext2]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{Yes}}<ref name="note-23">Some [[Installable File System]] drivers and [[operating system]]s may not support extended attributes, access control lists or security labels on these filesystems.  Linux kernels prior to 2.6.x may either be missing support for these altogether or require a [[patch (computing)|patch]].</ref>
| {{Yes}}<ref name="note-23" />
| {{Yes}}
| {{No}}
| 1 second
|-
! [[ext3]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}<ref name="note-23" />
| {{Yes}}<ref name="note-23" />
| {{Yes}}
| {{No}}
| 1 second
|-
! [[ext3cow]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}<ref name="note-23" />
| {{Yes}}<ref name="note-23" />
| {{Yes}}
| {{No}}
| 1 second
|-
! [[ext4]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{unk}}
| {{Yes}}
| {{No}}
| {{Yes}}<ref name="note-23" />
| {{Yes}}<ref name="note-23" />
| {{Yes}}
| {{Partial}}<ref>[[ext4]] has group descriptor, journal and, starting from Linux kernel 3.5, metadata checksumming</ref>
| 1 nanosecond
|-
! [[exFAT]]
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{unk}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{Partial}}
| 10 milliseconds
|-
! [[FAT12]]
| {{No}}<ref name="fat-owner">[[Concurrent DOS]], [[FlexOS]], [[Multiuser DOS]], [[REAL/32]], [[PalmDOS]], [[Novell DOS]], [[OpenDOS]], and [[DR-DOS]] can store file owner information in reserved fields of directory entries on FAT12 and FAT16 volumes, if the optional multi-user security module is loaded. If loaded, most external commands invoke support for special /U:owner/group command line options to deal with this extra information.</ref>
| {{No}}<ref name="fat-permissions">[[Concurrent DOS]], [[FlexOS]], [[Multiuser DOS]], [[REAL/32]], [[DR DOS]], [[PalmDOS]], [[Novell DOS]], [[OpenDOS]], and DR-DOS can store read/write/delete/execute<!-- execute only in FlexOS --> access permissions and file/directory passwords in reserved fields of directory entries on FAT12 and FAT16 volumes. This is an integral part of the design, therefore passwords can be appended to file or directory names with semicolon (for example: dirname;dirpwd\filename;filepwd), the PASSWORD command can be used to control permissions and some commands support a special /P:pwd option to deal with this feature.</ref>
| {{Partial}}<ref name="fat-cstamp">File creation and file access timestamps are supported only by DOS 7.0 and higher, and typically only when explicitly enabled.</ref>
| {{Partial}}<ref name="fat-cstamp"/>
| {{Yes}}
| {{Yes}}
| {{No}}<ref name=fat-ctime>Some FAT implementations, such as in Linux, show file modification timestamp (mtime) in the metadata change timestamp (ctime) field. This timestamp is however, not updated on file metadata change.</ref>
| {{No}}
| {{No}}
| {{No}}
| {{No}}<ref name="note-22">Particular [[Installable File System]] drivers and [[operating system]]s may not support extended attributes on FAT12 and FAT16.  The OS/2 and Windows NT filesystem drivers for FAT12 and FAT16 support extended attributes (using a "EA&nbsp;DATA.&nbsp;SF" pseudo-file to reserve the clusters allocated to them).  Other filesystem drivers for other operating systems do not.</ref>
| {{No}}
| 10 milliseconds
|-
! [[FAT16]]
| {{No}}<ref name="fat-owner"/>
| {{No}}<ref name="fat-permissions"/>
| {{Partial}}<ref name="fat-cstamp"/>
| {{Partial}}<ref name="fat-cstamp"/>
| {{Yes}}
| {{Yes}}
| {{No}}<ref name=fat-ctime/>
| {{No}}
| {{No}}
| {{No}}
| {{No}}<ref name="note-22" />
| {{No}}
| 10 milliseconds
|-
! [[FAT32]]
| {{No}}<!-- only in DR-DOS 7.07: <ref name="fat-owner"/> -->
| {{No}}<!-- only in DR-DOS 7.07: <ref name="fat-permissions"/> -->
| {{Partial}}<ref name="fat-cstamp"/>
| {{Partial}}<ref name="fat-cstamp"/>
| {{Yes}}
| {{Yes}}
| {{No}}<ref name=fat-ctime/>
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| 10 milliseconds
|-
! [[Berkeley Fast File System|FFS]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Fossil (file system)|Fossil]]
| {{Yes}}
| {{Yes}}<ref name="note-61">File permission in [[9P]] are a variation of the traditional Unix permissions with some minor changes, e.g. the suid bit is replaced by a new 'exclusive access' bit.</ref>
| {{No}}
| {{Yes}}
| {{Yes}}
| {{unk}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| 1 second
|-
! [[GPFS]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| 1 nanosecond
|-
! [[Global File System|GFS]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
|{{unk}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{Yes}}<ref name="note-23" />
| {{Yes}}<ref name="note-23" />
| {{Yes}}
| {{No}}
| {{unk}}
|-
! [[Hierarchical File System|HFS]]
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{unk}}
|-
! [[HFS Plus]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}<ref>{{cite web|url=http://www.trustedbsd.org/mac.html |title=As of 10.5 Leopard, Mac OS X has support for Mandatory Labels. See |publisher=Trustedbsd.org |date= |accessdate=2013-02-05}}</ref>
| {{Yes}}
| {{No}}
| 1 second
|-
! [[High Performance File System|HPFS]]
| {{Yes}}<ref name="note-14">The ''f-node'' contains a field for a user identifier.  This is not used except by [[OS/2|OS/2 Warp Server]], however.</ref>
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{Yes}}
| {{No}}
| {{unk}}
|-
! [[High Sierra Format|High Sierra]]
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|{{unk}}
|{{unk}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[ISO 9660|ISO 9660:1988]]
| {{No}}
| {{No}}
| {{Yes}}<ref name="9660crtime">Time the file was recorded on the volume always available; "File Creation Date and Time" available only if the file has an Extended Attribute block.</ref>
| {{No}}<ref name="9660atime">Not applicable to file systems on a read-only medium.</ref>
| {{Yes}}<ref name="9660mtime">Available only if the file has an Extended Attribute block.</ref>
|{{unk}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[ISO 9660|ISO 9660:1999]]
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|{{unk}}
|{{unk}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[JFS file system|JFS]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| 1 second
|-
! [[Joliet (file system)|Joliet ("CDFS")]]
| {{No}}
| {{No}}
| {{Yes}}<ref name="9660crtime"/>
| {{No}}<ref name="9660atime"/>
| {{Yes}}<ref name="9660mtime"/>
|{{unk}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Lanyard Filesystem]]
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| 1 nanosecond
|-
! [[Level-D]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|{{unk}}
|{{unk}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Log-structured File System (BSD)|LFS]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Lustre (file system)|Lustre]]
| {{Yes}}
| {{Yes}}
| {{Partial}}<ref name="lustre-crtime">Creation time is stored in the backing ext4 filesystem, but is not yet sent to clients.</ref>
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Partial}}<ref name="lustre-cksum">Lustre has checksums for data over the network, but depends on backing filesystem and hardware for checksums of persistent data</ref><ref name="lustre-zfs"/>
| {{unk}}
|-
! [[NILFS]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
|{{unk}}
|{{unk}}
| {{Yes}}
| {{No}}
| Planned
| {{No}}
| Planned
| {{Yes}}
| {{unk}}
|-
! [[NTFS]]
| {{Yes}}
| {{Yes}}<ref name="note-5">NTFS [[access control list]]s can express any access policy possible using simple POSIX file permissions (and far more), but use of a POSIX-like interface is not supported without an add-on such as [[Services for UNIX]] or [[Cygwin]].</ref>
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}<ref name="note-92">As of Vista, NTFS has support for Mandatory Labels, which are used to enforce [[Mandatory Integrity Control]]. See [http://msdn2.microsoft.com/en-us/library/bb648648.aspx]</ref>
| {{Yes}}
| {{No}}
| 100 nanoseconds
|-
! [[Novell Storage Services|NSS]]
| {{Yes}}
| {{Yes}}
| {{Yes}}<ref name="note-31">The local time, timezone/[[UTC]] offset, and date are derived from the time settings of the reference/single timesync source in the NDS tree.</ref>
| {{Yes}}<ref name="note-31" />
|{{unk}}
|{{unk}}
| {{Yes}}
| {{Yes}}<ref name="note-31" />
| {{Yes}}
| {{unk}}
| {{Yes}}<ref name="note-19">Novell calls this feature "multiple data streams".  Published specifications say that NWFS allows for 16 attributes and 10 data streams, and NSS allows for unlimited quantities of both.</ref><ref name="note-29">Some file and directory metadata is stored on the NetWare server irrespective of whether Directory Services is installed or not, like date/time of creation, file size, purge status, etc; and some file and directory metadata is stored in [[Novell Directory Services|NDS/eDirectory]], like file/object permissions, ownership, etc.</ref>
| {{No}}
| {{unk}}
|-
! [[NetWare File System|NWFS]]
| {{Yes}}
| {{unk}}
| {{Yes}}<ref name="note-31" />
| {{Yes}}<ref name="note-31" />
|{{unk}}
|{{unk}}
| {{Yes}}
| {{Yes}}<ref name="note-31" />
| {{Yes}}
| {{unk}}
| {{Yes}}<ref name="note-19" /><ref name="note-29" />
| {{No}}
| {{unk}}
|-
! [[OCFS]]
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
|{{unk}}
|{{unk}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[OCFS2]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
|{{unk}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Partial}}<ref>ocfs2 computes and validates checksums of metadata objects like inodes and directories. It also stores an error correction code capable to fixing single-bite errors.</ref>
| {{unk}}
|-
! [[Files-11|ODS-5]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{unk}}
|{{unk}}
|{{unk}}
| {{unk}}
| {{Yes}}
| {{Yes}}
| {{unk}}
| {{Yes}}<ref name="note-17">Record Management Services (RMS) attributes include record type and size, among many others.</ref>
| {{No}}
| {{unk}}
|-
! [[OS4000]]
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[PramFS]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{unk}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| 1 second
|-
! [[QFS]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|{{unk}}
|{{unk}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{unk}}
|-
! [[ReiserFS]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Reiser4]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Reliance (file system)|Reliance]]
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Partial}}<ref name="relcrc">CRCs are employed for certain types of metadata.</ref>
| {{unk}}
|-
! [[Reliance Nitro]]
| {{yes2}} Linux port
| {{yes2}} Linux port
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{yes2}} Linux port
| {{No}}
| {{Yes}}
| {{Partial}}<ref name="relcrc" />
| {{unk}}
|-
! [[Universal Disk Format|UDF]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|{{unk}}
|{{unk}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{unk}}
|-
! [[Unix File System|UFS1]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{Yes}}<ref name="note-33">Access-control lists and MAC labels are layered on top of extended attributes.</ref>
| {{Yes}}<ref name="note-33" />
| {{No}}<ref name="note-32">Some operating systems implemented extended attributes as a layer over UFS1 with a parallel backing file (e.g., FreeBSD 4.x).</ref>
| {{No}}
| {{unk}}
|-
! [[Unix File System|UFS2]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{Yes}}<ref name="note-33" />
| {{Yes}}<ref name="note-33" />
| {{Yes}}
| {{No}}
| {{unk}}
|-
! [[Version 6 Unix file system|V6FS]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Version 7 Unix file system|V7FS]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[VMware VMFS|VMFS2]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
|{{unk}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[VMware VMFS|VMFS3]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
|{{unk}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Veritas File System|VxFS]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{unk}}
| {{Yes}}<ref name="note-23" />
| {{No}}
| {{unk}}
|-
! [[XFS]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}<ref name="note-23" />
| {{Yes}}
| {{Partial}}
| 1 nanosecond
|-
! [[ZFS]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|{{unk}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}<ref name="note-69">MAC/Sensitivity labels are per filesystem. A label per file are not out of the question as a future compatible change but aren't part of any available version of ZFS.</ref>
| {{Yes}}<ref name="note-60">Solaris "extended attributes" are really full-blown alternate data streams, in both the Solaris UFS and ZFS. ZFS also has "system attributes" used for storing MS-DOS/NTFS compatible attributes for use by CIFS; as well as some attributes ported from FreeBSD</ref>
| {{Yes}}
| 1 nanosecond
|- class="sortbottom"
! File system
! Stores file owner
! [[POSIX]] file permissions
! Creation timestamps
! Last access/read timestamps
! Last content modification timestamps
! Disk copy created
! Last metadata change timestamps
! Last archive timestamps
! [[Access control list]]s
! Security/ [[Mandatory access control|MAC]] labels
! [[Extended attribute]]s/ [[Fork (filesystem)|Alternate data streams/ forks]]
! Checksum/ [[Error-correcting code|ECC]]
! Max Timestamp Resolution
|}

==Features==
{| class="wikitable sortable" style="width: auto; text-align: center; font-size: smaller; table-layout: fixed; line-height:1.25"
|-
! File system
! [[Hard link]]s
! [[Symbolic link]]s
! [[Journaling file system|Block journaling]]
! [[Journaling file system|Metadata-only journaling]]
! [[Case-sensitive]]
! [[Case-preserving]]
! [[File Change Log]]
! [[Snapshot (computer storage)|Snapshot]]
! [[Execute in place|XIP]]
! [[Filesystem-level encryption|Encryption]]
! [[Copy-on-write|COW]]
! [[Logical volume manager|Integrated LVM]]
! [[Data deduplication]]
! Volumes are resizeable
|-
! [[Be File System]]
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{unk}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Btrfs]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| Planned<ref name="CM090622">{{citation
| title = A Conversation with Chris Mason on BTRfs: the next generation file system for Linux
| first = Amanda | last = McPherson
| date = 2009-06-22
| accessdate = 2009-09-01
| publisher = [[Linux Foundation]]
| url = http://www.linuxfoundation.org/news-media/blogs/browse/2009/06/conversation-chris-mason-btrfs-next-generation-file-system-linux
}}</ref>
| {{Yes}}
| {{Yes}}
| {{Yes}} (via bedup)<ref name="BtrfsWikiDedup">{{citation
| title = Deduplication
| first = BTRFS | last = Wiki
| url=https://btrfs.wiki.kernel.org/index.php/Deduplication
}}</ref>
| {{Yes|Online}}
|-
! [[Commodore DOS|CBM DOS]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
|-
! [[CP/M]] file system
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[DECtape]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! DOS ([[GEC 4000 series|GEC]])
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[ext2]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}<ref name="note-65">Linux kernel versions 2.6.12 and newer.</ref>
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes|Online}}<ref name="resize2fs">Offline growing/shrinking as well as online growing: {{cite web| title = Linux man page for resize2fs(8) (from e2fsprogs 1.41.9) | url = http://www.unix.com/man-page/Linux/8/resize2fs/}}</ref>
|-
! [[ext3]]
| {{Yes}}
| {{Yes}}
| {{Yes}}<ref name="note-62">Off by default.</ref>
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}{{citation needed|date=November 2013}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes|Online (can only be shrunk offline)}}<ref name="resize2fs" />
|-
! [[ext3cow]]
| {{Yes}}
| {{Yes}}
| {{Yes}}<ref name="note-62">Off by default.</ref>
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Unknown}}
| {{Yes}}
| {{Unknown}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Unknown}}
|-
! [[ext4]]
| {{Yes}}
| {{Yes}}
| {{Yes}}<ref name="note-62" />
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}{{citation needed|date=November 2013}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes|Online (can only be shrunk offline)}}<ref name="resize2fs" />
|-
! [[exFAT]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{unk}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[FAT12]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Partial}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Partial|Offline}}<ref name="parted-resize">{{citation | url = http://www.gnu.org/software/parted/manual/html_chapter/parted_6.html | chapter = 6 | title = Parted manual | publisher = GNU}}</ref>
|-
! [[FAT16]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Partial}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Partial|Offline}}<ref name="parted-resize" />
|-
! [[FAT32]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Partial}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Partial|Offline}}<ref name="parted-resize" />
|-
! [[Berkeley Fast File System|FFS]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}<ref name="note-110">"[[Write Ahead Physical Block Logging]]" in [[NetBSD]], provides metadata [[journaling file system|journaling]] and consistency as an alternative to [[softdep]].</ref>
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Partial|Offline (cannot be shrunk)}}<ref>{{cite web|url=http://www.openbsd.org/cgi-bin/man.cgi?query=growfs |title=OpenBSD growfs(8) manpage |publisher=Openbsd.org |date=2008-11-28 |accessdate=2013-02-05}}</ref>
|-
! [[Fossil (file system)|Fossil]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}<ref name="fossil+venti">When used with [[venti]].</ref>
| {{No}}
| {{Yes}}<ref name="fossil+venti">When used with [[venti]].</ref>
| {{Partial|Offline}}<ref name="fossil+venti">When used with [[venti]].</ref>
|-
! [[Global File System|GFS]]
| {{Yes}}
| {{Yes}}<ref>Context based symlinks were supported in GFS, GFS2 only supports standard symlinks since the bind mount feature of the Linux VFS has made context based symlinks obsolete</ref>
| {{Yes}}
| {{Yes}}<ref>Optional journaling of data</ref>
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{Yes|Online}}
|-
! [[GPFS]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes|Online}}
|-
! [[HAMMER]]
| {{Yes}}
| {{Yes}}
| {{unk}}
| {{unk}}
| {{Yes}}
| {{Yes}}
| {{unk}}
| {{Yes}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{Yes|On demand}}
| {{unk}}
|-
! [[Hierarchical File System|HFS]]
| {{No}}
| {{Yes}}<ref name="note-HFS-alias">Mac OS System 7 introduced the 'alias', analogous to the POSIX symbolic link but with some notable differences.  Not only could they cross file systems but they could point to entirely different file servers, and recorded enough information to allow the remote file system to be mounted on demand.  It had its own API that application software had to use to gain their benefits-- this is the opposite approach from POSIX which introduced specific APIs to avoid the symbolic link nature of the link.  The Finder displayed their file names in an italic font (at least in Roman scripts), but otherwise they behaved identically to their referent.</ref>
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[HFS Plus]]
| {{Yes}}<ref>{{cite web|url=http://developer.apple.com/technotes/tn/tn1150.html#HardLinks |title=Hard Links on HFS |publisher=Developer.apple.com |date= |accessdate=2013-02-05}}</ref>
| {{Yes}}
| {{No}}
| {{Yes}}<ref name="note-48">Metadata-only journaling was introduced in the Mac OS 10.2.2 HFS Plus driver; journaling is enabled by default on Mac OS 10.3 and later.</ref>
| {{Partial}}<ref name="note-35">Although often believed to be case sensitive, HFS Plus normally is not. The typical default installation is case-preserving only. From Mac OS 10.3 on the command [http://developer.apple.com/documentation/Darwin/Reference/ManPages/man8/newfs_hfs.8.html ''newfs_hfs -s''] will create a case-sensitive new file system. HFS Plus version 5 optionally supports case-sensitivity. However, since case-sensitivity is fundamentally different from case-insensitivity, a new signature was required so existing HFS Plus utilities would not see case-sensitivity as a file system error that needed to be corrected. Since the new signature is 'HX', it is often believed this is a new filesystem instead of a simply an upgraded version of HFS Plus.  See Apple's [http://developer.apple.com/documentation/MacOSX/Conceptual/BPFileSystem/Articles/Comparisons.html File System Comparisons] (which hasn't been updated to discuss HFSX) and [http://developer.apple.com/technotes/tn/tn1150.html Technical Note TN1150: HFS Plus Volume Format] (which provides a very technical overview of HFS Plus and HFSX).</ref>
| {{Yes}}
| {{Yes}}<ref name="note-64">Mac OS Tiger (10.4) and late versions of Panther (10.3) provide file change logging (it's a feature of the file system software, not of the volume format, actually). See [http://www.kernelthread.com/software/fslogger/ fslogger].</ref>
| {{No}}
| {{No}}
| {{Yes}}<ref name="note-77">As of OS X 10.7, HFS+ supports full volume file encryption known as Filevault 2.</ref>
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}<ref>Since [[Mac OS X Snow Leopard]], online resizing is supported.{{cite web| title=How to resize a live partition in Snow Leopard and Lion |url=http://www.techrepublic.com/blog/mac/how-to-resize-a-live-partition-in-snow-leopard-and-lion/1795}}</ref>
|-
! [[High Performance File System|HPFS]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{unk}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{No}}
| {{unk}}
|-
! [[JFS file system|JFS]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}<ref name="note-30">Particular [[Installable File System]] drivers and [[operating system]]s may not support case sensitivity for JFS. OS/2 does not, and Linux has a mount option for disabling case sensitivity.</ref>
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{Yes|Online (cannot be shrunk)}}<ref name="linux-resizing">[http://www.linux.com/archive/feed/32002 ]{{dead link|date=February 2013}}</ref>
|-
! [[Lanyard Filesystem]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Partial|Offline (cannot be shrunk)}}
|-
! [[Level-D]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[Log-structured File System (BSD)|LFS]]
| {{Yes}}
| {{Yes}}
| {{Yes}}<ref name="note-38">UDF, LFS, and NILFS are [[log-structured file system]]s and behave as if the entire file system were a journal.</ref>
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[Lustre (file system)|Lustre]]
| {{Yes}}
| {{Yes}}
| {{Yes}}<ref name="note-62" />
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}} in 2.0 and later
| {{No}}<ref name="lustre-zfs">Not available with ext3/4, but will be available with ZFS OST/MDT backing filesystems.</ref>
| {{No}}
| {{No}}
| {{No}}<ref name="lustre-zfs" />
| {{No}}<ref name="lustre-zfs" />
| {{No}}<ref name="lustre-zfs" />
| {{Yes|Online}}<ref name="lustre-shrink">Can be shrunk online by migrating files off an OST and removing the OST, or offline with ext3/4 backing filesystems by shrinking the OST filesystem</ref>
|-
! [[NILFS]]
| {{Yes}}
| {{Yes}}
| {{Yes}}<ref name="note-38" />
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{unk}}
| {{unk}}
| {{Yes|Online (since Linux-3.x and nilfs-utils 2.1)}}
|-
! [[Novell Storage Services|NSS]]
| {{Yes}}
| {{Yes}}
| {{unk}}
| {{Yes}}
| {{Yes}}<ref name="note-20">Case-sensitivity/Preservation depends on client.  Windows, DOS, and OS/2 clients don't see/keep case differences, whereas clients accessing via NFS or AFP may.</ref>
| {{Yes}}<ref name="note-20" />
| {{Yes}}<ref name="note-6">The file change logs, last entry change timestamps, and other filesystem metadata, are all part of the extensive suite of auditing capabilities built into NDS/eDirectory called NSure Audit. ([http://www.novell.com/documentation/nsureaudit/html/netware_event_data.htm Filesystem Events tracked by NSure])</ref>
| {{Yes}}
| {{No}}
| {{Yes}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[NTFS]]
| {{Yes}}
| {{Yes}}<ref name="note-34">As of Windows Vista, NTFS fully supports soft links. See [http://www.microsoft.com/technet/technetmag/issues/2007/02/VistaKernel/default.aspx this Microsoft article on Vista kernel improvements]. NTFS 5.0 (Windows 2000) and higher can create [http://support.microsoft.com/kb/205524 ''junctions''], which allow any valid local directory (but not individual files) ("target" of junction) to be mapped to an NTFS version thereof ("source" = location of junction). The source directory must lie on an NTFS 5+ partition, but the target directory can lie on any valid local partition and needn't be NTFS. Junctions are implemented through ''reparse points'', which allow the normal process of filename resolution to be extended in a flexible manner.</ref>
| {{No}}<ref name="note-37">NTFS stores everything, even the file data, as meta-data, so its log is closer to block journaling.</ref>
| {{Yes}}<ref name="note-37" />
| {{Yes}}<ref name="note-36">While NTFS itself supports [[case sensitivity]], the Win32 environment subsystem cannot create files whose names differ only by case for compatibility reasons. When a file is opened for writing, if there is any existing file whose name is a case-insensitive match for the new file, the existing file is truncated and opened for writing instead of a new file with a different name being created. Other subsystems like e. g. [[Services for Unix]], that operate directly above the kernel and not on top of Win32 can have case-sensitivity.</ref>
| {{Yes}}
| {{Yes}}
| {{Partial}}<ref name="note-93">NTFS does not internally support snapshots, but in conjunction with the [[Volume Shadow Copy Service]] can maintain persistent block differential volume snapshots.</ref>
| {{Yes}}
| {{Yes}}
| {{Partial}}
| {{No}}
| {{Yes}} ([[Windows Server 2012]])<ref name="singleinstancestorage">{{cite web
   | url = http://www.techrepublic.com/blog/datacenter/windows-server-8-data-deduplication-what-you-need-to-know/4887
   | title = Windows Server 8 data deduplication
   | author = Rick Vanover
   | accessdate = 2011-12-02
}}</ref>
| {{Yes|Online}}<ref name="ntfs-shrink">{{cite web|url=http://www.bleepingcomputer.com/tutorials/tutorial133.html |title=How to Shrink and Extend NTFS Volumes in Windows |publisher=Bleepingcomputer.com |date= |accessdate=2013-02-05}}</ref>
|-
! [[NetWare File System|NWFS]]
| {{Yes}}<ref name="note-53">Available only in the "NFS" namespace.</ref>
| {{Yes}}<ref name="note-53" />
| {{No}}
| {{No}}
| {{Yes}}<ref name="note-20" />
| {{Yes}}<ref name="note-20" />
| {{Yes}}<ref name="note-6" />
| {{unk}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}<ref name="note-99">Limited capability.  Volumes can span physical disks ''(volume segment)''</ref>
| {{unk}}
| {{unk}}
|-
! [[OCFS]]
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[OCFS2]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Partial}}<ref>OCFS2 supports creating multiple write-able snapshots of regular files using REFLINK.</ref>
| {{No}}
| {{No}}
| {{unk}}
| {{No}}
| {{No}}
| {{Yes|Online for version 1.4 and higher}}
|-
! [[Files-11|ODS-2]]
| {{Yes}}
| {{Yes}}<ref name="note-18">These are referred to as "aliases".</ref>
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[Files-11|ODS-5]]
| {{Yes}}
| {{Yes}}<ref name="note-18" />
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[OS4000]]
| {{No}}
| {{Yes}}<ref>Symlinks only visible to NFS clients. References and Off-Disk Pointers (ODPs) provide local equivalent.</ref>
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[PramFS]]
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
|-
! [[QFS]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[ReiserFS]]
| {{Yes}}
| {{Yes}}
| {{No}}<ref name="note-44">Full block journaling for ReiserFS was not added to Linux 2.6.8 for obvious reasons.{{Why?|date=July 2012}}</ref>
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes|Online}}
|-
! [[Reiser4]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{unk}}
| {{No}}
| {{Yes}}<ref name="note-50">Reiser4 supports transparent compression and encryption with the ''cryptcompress'' plugin which is the default file handler in version 4.1.</ref>
| {{Yes}}
| {{No}}
| {{unk}}
| {{Yes|Online (can only be shrunk offline)}}
|-
! [[Reliance (file system)|Reliance]]
| {{No}}
| {{No}}
| {{No}}<ref name="reltrans">File system implements reliability via atomic transactions.</ref>
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Reliance Nitro]]
| {{Yes}}
| {{Yes}}
| {{No}}<ref name="reltrans" />
| {{No}}
| {{Depends}} on OS
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[RT-11]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Universal Disk Format|UDF]]
| {{Yes}}
| {{Yes}}
| {{Yes}}<ref name="note-38" />
| {{Yes}}<ref name="note-38" />
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Unix File System|UFS1]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Unix File System|UFS2]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}<ref name="note-66">"[[Soft dependencies]]" ([[softdep]]) in [[NetBSD]], called "[[soft updates]]" in [[FreeBSD]] provide [[meta-data consistency at all times]] without [[double writes]] ([[journaling file system|journaling]]).</ref><ref name="note-143">Block level journals can be added by using gjournal module in FreeBSD.</ref><ref>http://docs.oracle.com/cd/E19253-01/817-5093/fsoverview-43/index.html</ref>
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{unk}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Partial|Offline (cannot be shrunk)}}<ref>{{cite web|url=http://www.freebsd.org/cgi/man.cgi?query=growfs |title=FreeBSD growfs(8) manpage |publisher=Freebsd.org |date=2012-04-30 |accessdate=2013-02-05}}</ref>
|-
! [[Version 6 Unix file system|V6FS]]
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Version 7 Unix file system|V7FS]]
| {{Yes}}
| {{No}}<ref name="note-59">System V Release 4, and some other [[Unix]] systems, retrofitted symbolic links to their versions of the [[Version 7 Unix]] file system, although the original version didn't support them.</ref>
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
|-
! [[Veritas File System|VxFS]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}<ref name="note-70">VxFS provides an optional feature called "Storage Checkpoints" which allows for advanced file system snapshots.</ref>
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{Yes}}
| {{unk}}
|-
! [[VMware VMFS|VMFS2]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[VMware VMFS|VMFS3]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[XFS]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}<ref name="note-40">Optionally no on IRIX and Linux.</ref>
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes|Online (cannot be shrunk)}}
|-
! [[ZFS]]
| {{Yes}}
| {{Yes}}
| {{Yes}}<ref name="note-56">ZFS is a transactional filesystem using copy-on-write semantics, guaranteeing an always-consistent on-disk state without the use of a traditional journal.  However, it does also implement an intent log to provide better performance when synchronous writes are requested.</ref>
| {{No}}<ref name="note-56" />
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes|Online (cannot be shrunk)}}<ref>{{cite web | title = How to resize ZFS | url = http://harryd71.blogspot.com/2008/08/how-to-resize-zfs.html}}</ref>
|- class="sortbottom"
! File system
! Hard links
! Symbolic links
! Block journaling
! Metadata-only journaling
! Case-sensitive
! Case-preserving
! File Change Log
! Snapshotting
! XIP
! Encryption
! COW
! Integrated LVM
! Data deduplication
! Volumes are resizeable
|}

==Allocation and layout policies==
{| class="wikitable sortable" style="width: auto; text-align: center; font-size: smaller; table-layout: fixed; line-height:1.25"
|-
! File system
! [[Block suballocation]] <!-- was Block fragmentation --> <!--merged with tail packing-->
! Variable file block size<ref name="note-41">Variable block size refers to systems which support different block sizes on a per-file basis.  (This is similar to [[extent (file systems)|extent]]s but a slightly different implementational choice.)  The current implementation in UFS2 is read-only.</ref>
! [[extent (file systems)|Extent]]s
! [[Allocate-on-flush]] <!-- was Delayed allocation -->
! [[Sparse file]]s
! Transparent compression
|-
! [[Be File System]]
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{unk}}
| {{No}}
|-
! [[Btrfs]]
| {{Partial}}<ref name="Btrfs tail packing">Btrfs can only inline files smaller than 3916B with its metadata{{cite web|url=http://comments.gmane.org/gmane.comp.file-systems.btrfs/19478|title=Mailing list discussion}}</ref>
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|-
! [[Commodore DOS|CBM DOS]]
| {{No}}
| {{Partial}}<ref>only for .REL (record structured) files, up to 254 bytes/record</ref>
| {{No}}
| {{No}}
| {{No}}
| {{No}}
|-
! [[CP/M]] filesystem
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[DECtape]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
|-
! DOS ([[GEC 4000 series|GEC]])
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
|-
! [[ext2]]
| {{No}}<ref name="note-47">Fragments were planned, but never actually implemented on ext2 and ext3.</ref>
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}<ref name="note-49">[[e2compr]], a set of [[patch (computing)|patches]] providing block-based [[data compression|compression]] for ext2, has been available since 1997, but has never been merged into the mainline Linux kernel.</ref>
|-
! [[ext3]]
| {{No}}<ref name="note-47" />
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[ext3cow]]
| {{No}}<ref name="note-47" />
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[ext4]]
| {{No}}<ref name="note-47" />
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
|-
! [[exFAT]]
| {{unk}}
| {{No}}
| {{No}}
| {{unk}}
| {{No}}
| {{No}}
|-
! [[FAT12]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}<ref name="note-51">[[SuperStor]] in [[DR DOS]] 6.0 and [[PC DOS]] 6.1, [[DoubleSpace]] in MS-DOS 6.0, [[DriveSpace]] in [[MS-DOS]] 6.22, [[Windows 95]] and [[Windows 98]], and [[Stacker (disk compression)|Stacker]] in [[Novell DOS]] 7, [[OpenDOS]] 7.01, [[DR-DOS]] 7.02/7.03 and PC DOS 7.0/2000 were [[data compression]] schemes for [[File Allocation Table|FAT]].</ref>
|-
! [[FAT16]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}<ref name="note-51" />
|-
! [[FAT32]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
|-
! [[Berkeley Fast File System|FFS]]
| {{yes2}} 8:1<ref name="note-45">Other block:fragment size ratios supported; 8:1 is typical and recommended by most implementations.</ref>
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[Fossil (file system)|Fossil]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}<ref name="fossil+venti">When used with [[venti]].</ref>
|-
! [[Global File System|GFS]]
| {{Partial}}<ref>Only for "stuffed" inodes</ref>
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[GPFS]]
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[HFS Plus]]
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{Yes}}
|-
! [[High Performance File System|HPFS]]
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
|-
! [[JFS (file system)|JFS]]
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{yes2}} only in JFS1 on AIX<ref>{{cite web|title=AIX documentation: JFS data compression |publisher=IBM |url=http://publib.boulder.ibm.com/infocenter/pseries/v5r3/topic/com.ibm.aix.baseadmn/doc/baseadmndita/jfsdatacomp.htm}}</ref>
|-
! [[Level-D]]
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
|-
! [[Log-structured File System (BSD)|LFS]]
| {{yes2}} 8:1<ref name="note-45" />
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[Lustre (file system)|Lustre]]
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
|-
! [[Novell Storage Services|NSS]]
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{unk}}
| {{Yes}}
|-
! [[NILFS]]
| {{No}}
| {{No}}
| Planned
| {{Yes}}
| {{Yes}}
| {{No}}
|-
! [[NTFS]]
|{{Partial}}
|{{No}}
|{{Yes}}
|{{No}}
|{{Yes}}
|{{Partial}}<ref>Only if formatted with 4kB-sized clusters or smaller</ref>
|-
! [[NetWare File System|NWFS]]
| {{Yes}}<ref name="note-42">Each possible size (in sectors) of file tail has a corresponding suballocation block chain in which all the tails of that size are stored. The overhead of managing suballocation block chains is usually less than the amount of block overhead saved by being able to increase the block size but the process is less efficient if there is not much free disk space.</ref>
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{Yes}}
|-
! [[OCFS]]
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{unk}}
| {{No}}
|-
! [[OCFS2]]
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[Files-11|ODS-5]]
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{unk}}
| {{No}}
|-
! [[OS4000]]
| {{No}}
| {{Yes}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
|-
! [[PramFS]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[QFS]]
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{No}}
|-
! [[ReiserFS]]
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[Reiser4]]
| {{Yes}}
| {{No}}
| {{Yes}}<ref name="note-39">In "extents" mode.</ref>
| {{Yes}}
| {{Yes}}
| {{Yes}}<ref name="note-50" />
|-
! [[Reliance (file system)|Reliance]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
|-
! [[Reliance Nitro]]
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[Universal Disk Format|UDF]]
| {{No}}
| {{No}}
| {{Yes}}
| {{depends}}<ref name="note-46">Depends on UDF implementation.</ref>
| {{No}}
| {{No}}
|-
! [[Unix File System|UFS1]]
| {{yes2}} 8:1<ref name="note-45" />
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[Unix File System|UFS2]]
| {{yes2}} 8:1<ref name="note-45" />
| {{Yes}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[Version 6 Unix file system|V6FS]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[Version 7 Unix file system|V7FS]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[VMware VMFS|VMFS2]]
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[VMware VMFS|VMFS3]]
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[Veritas File System|VxFS]]
| {{unk}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
|-
! [[XFS]]
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{No}}
|-
! [[ZFS]]
| {{Partial}}<ref name="note-68">When enabled, ZFS's logical-block based compression behaves much like tail-packing for the last block of a file.</ref>
| {{Yes}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
|- class="sortbottom"
! File system
! [[Block suballocation]] <!-- was Block fragmentation -->
! Variable file block size<ref name="note-41" />
! [[Extent (file systems)|Extent]]s
! [[Allocate-on-flush]] <!-- was Delayed allocation -->
! [[Sparse file]]s
! Transparent compression
|}

==Supporting operating systems==
{| class="wikitable sortable" style="width: auto; text-align: center; font-size: smaller; table-layout: fixed; line-height:1.25"
|-
! File system
! [[DOS]]
! [[Windows 9x]]
! [[Windows NT]]
! [[Linux]]
! [[Mac OS]]
! [[Mac OS X]]
! [[FreeBSD]]
! [[BeOS]]
! [[Solaris (operating system)|Solaris]]
! [[AIX]]
! [[z/OS]]
! [[OS/2]]
! [[Windows CE]]
! [[Windows Mobile]]
! [[VxWorks]]
! [[HP-UX]]
! [[Plan 9 from Bell Labs|Plan 9]]
|-
! [[Be File System|BFS]]
| {{No}}
| {{Partial}} - read-only with third-party driver
| {{Partial}} - read-only with third-party driver
| {{Partial}} - read-only
| {{No}}
| {{unk}}
| {{No}}
| {{Yes}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[Btrfs]]
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}: unstable from kernel 2.6.29 to 3.9; stable since 3.10
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[DECtape]]
| {{No}}
| {{unk}}
| {{unk}}
| {{yes2}} with AncientFS<ref name="ancientfs">[http://osxbook.com/software/ancientfs/ AncientFS]</ref>
| {{No}}
| {{yes2}} with AncientFS<ref name="ancientfs"/>
| {{yes2}} with AncientFS<ref name="ancientfs"/>
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[exFAT]]
| {{No}}
| {{Partial}} read-only with third party driver
| {{Yes}} : Win7, Vista SP1, can be added to XP SP2, SP3
| {{yes2}} with third party driver
| {{No}}
| {{Partial}} 10.6.5+, limited to 1024 byte clusters
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[ext2]]
| {{unk}}
| {{unk}}
| {{yes2}} with [[Ext2Fsd]] (complete)<ref name="Ext2Fsd Driver">Ext2Fsd is an open source ext2/ext3/ext4 kernel-level file system driver for Windows systems (NT/2K/XP/VISTA/7, X86/AMD64) that provides both read/write access to the file system. Currently, does not fully support extents (no size truncating/extending, no file deletion), a default feature of ext4. [http://www.ext2fsd.com/]</ref> or [[Ext2IFS|Ext2 IFS]] (partial, no large inodes)<ref name="Ext2 IFS for Windows">Ext2 IFS for Windows provides kernel-level read/write access to ext2 and ext3 volumes in Windows NT4, 2000, XP, Vista and Windows 2008. Does not support inodes size above 128 bytes and does not support ext4.[http://www.fs-driver.org/faq.html]</ref> or Ext2Read (read-only, also on LVM2)<ref name="Ext2Read">Ext2Read is an explorer-like utility to explore ext2/ext3/ext4 file systems that provides read-only access to the file system. It supports extents, large inodes, and LVM2 volumes.[http://sourceforge.net/projects/ext2read/ Ext2Read]</ref>
| {{Yes}} since kernel 0.99
| {{No}}
| {{yes2}} with ExtFS,<ref name="Paragon ExtFS for Mac OS X">Paragon ExtFS for Mac is a low-level file system driver specially developed to bridge file system incompatibility between Linux and Mac by providing full read/write access to the Ext2, Ext3 and Ext4 file systems under Mac OS X.[http://www.paragon-software.com/home/extfs-mac/]</ref> fuse-ext2,<ref name="fuse-ext2">Fuse-ext2 is a multi OS FUSE module to mount ext2 and ext3 file system devices and/or images with read and write support.[http://fuse-ext2.sourceforge.net/]</ref>  and ext2fsx<ref name="Mac OS X Ext2 Filesystem">Ext2fsx is the first and old implementation of the Ext2 (Linux) filesystem for Mac OS X.[http://sourceforge.net/projects/ext2fsx/]</ref>
| {{Yes}}
| {{yes2}} read-only
| {{unk}}
| {{unk}}
| {{unk}}
| {{yes2}} third-party app<ref name="OS/2 ext2 Driver">[http://hobbes.nmsu.edu/h-viewer.php?dir=/pub/os2/system/drivers/filesys&file=ext2_240.zip OS/2 ext2 Driver]</ref>
| {{yes2}} with 3rd-party app<ref name="tcmdr">See [[Total Commander]], which supports accessing ext2, ext3, and ReiserFS from Windows, Windows CE, and Windows Mobile.</ref>
| {{yes2}} with 3rd-party app<ref name="tcmdr" />
| {{unk}}
| {{unk}}
| {{Yes}}
|-
! [[ext3]]
| {{unk}}
| {{unk}}
| {{yes2}} with [[Ext2Fsd]] (complete)<ref name="Ext2Fsd Driver"/> or Ext2 IFS (partial, no large inodes)<ref name="Ext2 IFS for Windows"/> or Ext2Read (read-only, also on LVM2)<ref name="Ext2Read"/>
| {{Yes}} since kernel 2.4.15
| {{No}}
| {{yes2}} with ExtFS<ref name="Paragon ExtFS for Mac OS X"/> and fuse-ext2<ref name="fuse-ext2"/>
| {{Partial}} read-only<ref name="ext3">https://wiki.debian.org/Debian_GNU/kFreeBSD_FAQ#Q._Can_I_share_partitions_between_GNU.2FLinux_and_GNU.2FkFreeBSD.3F</ref>
| {{unk}}
| {{Yes}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{yes2}} with 3rd-party app<ref name="tcmdr" />
| {{yes2}} with 3rd-party app<ref name="tcmdr" />
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[ext3cow]]
| {{unk}}
| {{unk}}
| {{unk}}
| {{Yes}} Kernel 2.6.20
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[ext4]]
| {{No}}
| {{No}}
| {{Partial}} with [[Ext2Fsd]] (partial, extents limited)<ref name="Ext2Fsd Driver"/> or Ext2Read (read-only, also on LVM2)<ref name="Ext2Read"/>
| {{Yes}} since kernel 2.6.28
| {{No}}
| {{yes2}} with ExtFS (full read/write), <ref name="Paragon ExtFS for Mac OS X"/> fuse-ext2 (partial),<ref name="fuse-ext2"/> and  ext4fuse (read-only)<ref name="ext4fuse">ext4fuse is a free software multi OS FUSE module to mount ext4 file system devices and/or images with read-only support. [https://github.com/gerard/ext4fuse]</ref> 
| {{Partial}} support in kernel since version 10.1 (read-only)<ref name="ext3"/> or with ext4fuse (read-only)<ref name="ext4fuse"/>
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[FAT12]]
| {{Yes}}<!-- since QDOS, 86-DOS, MS-DOS/PC DOS 1.0 -->
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{no}}
| {{Partial}} on diskettes only, through dos* commands
| {{unk}}
| {{Yes}}
| {{Yes}}<ref name="wince_fdps">[http://msdn.microsoft.com/en-us/library/ms899821.aspx Files, Databases, and Persistent Storage]. MSDN.</ref>
| {{unk}}
| {{Yes}}<ref name="vxworks_dosfs">Via dosFs.</ref>
| {{unk}}
| {{Yes}}
|-
! [[FAT16]]
| {{Yes}} since DOS 3.0, FAT16B since DOS 3.31
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Partial}} on diskettes only, through dos* commands
| {{unk}}
| {{Yes}}
| {{Yes}}<ref name="wince_fdps" />
| {{Yes}}
| {{Yes}}<ref name="vxworks_dosfs" />
| {{unk}}
| {{Yes}}
|-
! [[FAT32]]
| {{Yes}} since DOS 7.1<ref name="fat32">Native FAT32 support with MS-DOS 7.10 and 8.0. Loadable FAT32 support for any DOS since 3.31 with DRFAT32 redirector driver. Native FAT32 support since OEM DR-DOS 7.04, bootable FAT32 support since OEM DR-DOS 7.06. Native FAT32 support with OEM PC DOS 7.10.</ref>
| {{Yes}} since [[Windows 95]] OSR2
| {{Yes}} since [[Windows 2000]]
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{Partial}} on diskettes only, through dos* commands
| {{unk}}
| {{yes2}} with third-party app<ref name="OS/2 and eComstation FAT32 Driver">{{cite web|url=http://hobbes.nmsu.edu/h-viewer.php?dir=/pub/os2/system/drivers/filesys&file=fat32_0913.wpi |title=OS/2 and eComstation FAT32 Driver |publisher=Hobbes.nmsu.edu |date= |accessdate=2013-02-05}}</ref>
| {{Yes}}<ref name="wince_fdps">[http://msdn.microsoft.com/en-us/library/ms899821.aspx Files, Databases, and Persistent Storage]. MSDN.</ref>
| {{Yes}}
| {{Yes}}<ref name="vxworks_dosfs">Via dosFs.</ref>
| {{unk}}
| {{Yes}}
|-
! [[Berkeley Fast File System|FFS]]
| {{No}}
| {{unk}}
| {{unk}}
| {{Yes}}<ref name="How_to_mount_FFS_partition_under_Linux">{{cite web|url=http://wiki.netbsd.se/How_to_mount_FFS_partition_under_Linux |title=How to mount FFS partition under Linux - NetBSD Wiki |publisher=Wiki.netbsd.se |date= |accessdate=2009-10-09 |archiveurl = http://web.archive.org/web/20080319022005/http://wiki.netbsd.se/How_to_mount_FFS_partition_under_Linux |archivedate = March 19, 2008}}</ref>
| {{No}}
| {{Yes}}
| {{Yes}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[Fossil (file system)|Fossil]]
| {{No}}
| {{No}}
| {{No}}
| {{yes2}} with 3rd-party software<ref name="note-182">Via [[Plan 9 from User Space]]; initial checkin {{cite web|url=http://code.swtch.com/plan9port/commits/2206c7baf349c28051046109a48e89cb0a5d6be1|title=fossil: import from plan 9|accessdate=2013-11-24}}</ref>
| {{No}}
| {{yes2}} with 3rd-party software<ref name="note-182" />
| {{yes2}} with 3rd-party software<ref name="note-182" />
| {{No}}
| {{yes2}} with 3rd-party software<ref name="note-182" />
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
|-
! [[Global File System|GFS]]
| {{No}}
| {{unk}}
| {{unk}}
| {{Yes}} since kernel 2.6.19
| {{No}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[Hierarchical File System|HFS]]
| {{No}}
| {{yes2}} with third-party app<ref name="Sharing Disks">{{cite web|author=Cross-platform Drive Solutions |url=http://www.macwindows.com/disks2.html |title=Sharing Disks - Windows Products |publisher=Macwindows.com |date= |accessdate=2013-02-05}}</ref>
| {{yes2}} with third-party app<ref name="Sharing Disks" /><ref name="DiskInternals Linux Reader" />
| {{Yes}}
| {{Yes}}
| {{partial}}: read-only since OSX 10.6<ref name="OS X read-only support">{{cite web | last = Gagne | first = Ken | date = 2009-08-31 | url = http://blogs.computerworld.com/snow_leopard_hfs_data | title = Losing legacy data to Snow Leopard | publisher = Computerworld | accessdate = 2009-09-07 }}</ref>
| {{yes2}} with third-party app<ref name="hfsutils">{{cite web|url=http://www.freshports.org/emulators/hfsutils |title=hfsutils at FreshPorts |publisher=Freshports.org |date= |accessdate=2013-02-05}}</ref><ref name="hfs">{{cite web|url=http://www.freshports.org/emulators/hfs |title=hfs at FreshPorts |publisher=Freshports.org |date= |accessdate=2013-02-05}}</ref>
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{yes2}} with third-party app<ref name="OS/2 HFS Driver">{{cite web|url=http://hobbes.nmsu.edu/h-viewer.php?dir=/pub/os2/system/drivers/filesys&file=hfsuo31a.zip |title=OS/2 HFS Driver |publisher=Hobbes.nmsu.edu |date= |accessdate=2013-02-05}}</ref>
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{No}}
|-
! [[HFS Plus]]
| {{No}}
| {{yes2}} with third-party app<ref name="Sharing Disks" />
| {{yes2}} with third-party app<ref name="Sharing Disks" /><ref name="DiskInternals Linux Reader" />
| {{Partial}} - write support occurs if journal is empty, but requires a force mount.
| {{Yes}} since [[Mac OS 8.1]]
| {{Yes}}
| {{Partial}} read-only third-party app<ref name="HFSExplorer">{{cite web|url=http://hem.bredband.net/catacombae/hfsx.html |title=Catacombae HFSExplorer |publisher=Hem.bredband.net |date= |accessdate=2013-02-05}}</ref>
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{yes2}} with third-party app
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{No}}
|-
! [[High Performance File System|HPFS]]
| {{yes2}} with third-party driver
| {{Partial}} read-only third-party driver<ref name="DOS/Win9x HPFS Driver">{{cite web|url=http://hobbes.nmsu.edu/h-viewer.php?dir=/pub/dos&file=ihpfs129.zip |title=DOS/Win 9x HPFS Driver |publisher=Hobbes.nmsu.edu |date= |accessdate=2013-02-05}}</ref>
| {{yes2}} included until v3.51, third-party driver until 4.0<ref name="Win NT 4.0 HPFS Driver">[http://hobbes.nmsu.edu/h-viewer.php?dir=/pub/windows&file=hpfsnt.zip Win NT 4.0 HPFS Driver]</ref>
| {{Yes}}
| {{No}}
| {{unk}}
| {{Yes}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{Yes}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[IBM Spectrum Scale]]<ref name="GPFS_OS_Support">[http://www-03.ibm.com/systems/software/gpfs/ IBM GPFS Product Page]</ref>
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}} since 2001
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
|-
! [[IBM]] [[MVS#MVS filesystem|HFS]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! IBM [[zFS (IBM file system)|zFS]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[JFS (file system)|JFS]]
| {{No}}
| {{unk}}
| {{unk}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{Yes}}
| {{unk}}
| {{Yes}}
| {{No}}
| {{No}}
| {{unk}}
| {{No}}
| {{No}}
|-
! [[Level-D]]
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[Log-structured File System (BSD)|LFS]]
| {{No}}
| {{unk}}
| {{unk}}
| {{yes2}} with logfs<ref name="logfs">[http://logfs.sourceforge.net/ logfs]</ref> and others
| {{No}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[LTFS]]
| {{No}}
| {{unk}}
| {{unk}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[Lustre (file system)|Lustre]]
| {{No}}
| {{No}}
| {{Partial}} - under development<ref name="lustre-wnc">http://wiki.lustre.org/index.php/Windows_Native_Client</ref>
| {{Yes}}<ref name="lustre">http://wiki.lustre.org/index.php?title=Main_Page</ref>
| {{No}}
| {{Partial}} - via FUSE
| {{Partial}} - via FUSE
| {{No}}
| {{Partial}} - under development<ref name="lustre-sol">http://wiki.lustre.org/index.php/FAQ_-_OS_Support</ref>
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[NILFS]]
| {{No}}
| {{unk}}
| {{unk}}
| {{Yes}} since kernel 2.6.30
| {{No}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[Novell Storage Services|NSS]]
| {{unk}}
| {{unk}}
| {{unk}}
| {{yes2}} with Novell OES2{{Citation needed|date=September 2010}}
| {{No}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[NTFS]]
| {{yes2}} with third-party driver
| {{yes2}} with third-party driver<ref name="NTFS for Windows 98">{{cite web|url=http://download.chip.eu/en/NTFS-for-Windows-98-1.03_69715.html |title=NTFS for Windows 98 |publisher=Download.chip.eu |date= |accessdate=2013-02-05}}</ref>
| {{Yes}}
| {{Yes}} Kernel 2.2 or newer, or with [[NTFS-3G]] or [[ntfsprogs]]
| {{yes2}} with [[NTFS-3G]] or [[MacFUSE]]
| {{yes2}} with [[NTFS-3G]] or partial read-only in kernel
| {{yes2}} with [[NTFS-3G]]
| {{yes2}} read-only
| {{yes2}} with [[NTFS-3G]] on Opensolaris
| {{unk}}
| {{unk}}
| {{Partial}} read-only third-party driver<ref name="OS/2 NTFS Driver">{{cite web|url=http://hobbes.nmsu.edu/h-viewer.php?dir=/pub/os2/system/drivers/filesys&file=ntfs_003.zip |title=OS/2 NTFS Driver |publisher=Hobbes.nmsu.edu |date= |accessdate=2013-02-05}}</ref>
| {{yes2}} with 3rd-party driver<ref>[[Tuxera]] NTFS  for Windows CE. See {{cite web|url=http://www.windowsfordevices.com/c/a/News/Tuxera-NTFS-for-Windows-CE/|title=article}} and [http://www.tuxera.com/about-us/news/1915/ announcement].</ref>
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[NetWare File System|NWFS]]
| {{unk}}
| {{unk}}
| {{unk}}
| {{yes2}} via ncpfs client software<ref name="ncpfs">[http://freshmeat.net/projects/ncpfs/ ncpfs]</ref>
| {{No}}
| {{unk}}
| {{Yes}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[OCFS]]
| {{No}}
| {{unk}}
| {{unk}}
| {{Yes}}
| {{No}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[OCFS2]]
| {{No}}
| {{unk}}
| {{unk}}
| {{Yes}}
| {{No}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[Files-11|ODS-2]]
| {{No}}
| {{unk}}
| {{unk}}
| {{Partial}} read-only with tool or kernel module<ref name="VMS2Linux">[http://www.vms2linux.de/ VMS2Linux]</ref>
| {{No}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[Files-11|ODS-5]]
| {{No}}
| {{unk}}
| {{unk}}
| {{Partial}} read-only with kernel module<ref name="VMS2Linux"/>
| {{No}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[PramFS]]
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
|-
! [[QFS]]
| {{No}}
| {{unk}}
| {{unk}}
| {{yes2}} via client software<ref name="Using+SAM-QFS+on+Linux+Clients">[http://wikis.sun.com/display/SAMQFSDocs/Using+SAM-QFS+on+Linux+Clients Using SAM-QFS on Linux Clients]</ref>
| {{No}}
| {{unk}}
| {{No}}
| {{unk}}
| {{Yes}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[ReFS]]
| {{No}}
| {{No}}
| {{Yes}} since Windows Server 2012 and Windows 8.1
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
|-
! [[Reiser4]]
| {{No}}
| {{unk}}
| {{Partial}} with DiskInternals Linux Reader<ref name="DiskInternals Linux Reader" /> (read-only)
| {{yes2}} with a kernel patch
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[ReiserFS]]
| {{No}}
| {{unk}}
| {{Partial}} with DiskInternals Linux Reader<ref name="DiskInternals Linux Reader" /> (read-only)
| {{Yes}} since kernel 2.4.1
| {{No}}
| {{No}}
| {{Partial}} - read only
| {{Partial}} - read only
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{yes2}} with 3rd-party app<ref name="tcmdr" />
| {{yes2}} with 3rd-party app<ref name="tcmdr" />
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[Reliance (file system)|Reliance]]
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{Yes}}
| {{unk}}
| {{No}}
|-
! [[Reliance Nitro]]
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{No}}
| {{Yes}}
| {{Yes}}
| {{Yes}}
| {{unk}}
| {{No}}
|-
! [[RT-11]]
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{No}}
| {{Yes}}
| {{unk}}
| {{No}}
|-
! [[Universal Disk Format|UDF]]
| {{unk}}
| {{Partial}} read-only support of UDF 1.02 since Win95 OSR2
| {{Yes}}<ref>{{cite web|url=http://windowshelp.microsoft.com/Windows/en-US/help/2af64e60-60aa-4d79-ab6c-3a5db5806cbe1033.mspx#section_2|title=Understanding the difference between the Live File System and Mastered disc formats|work=Which CD or DVD format should I use?|publisher=Microsoft|accessdate=2008-11-22}}</ref> <!-- Full rw access since Vista -->
| {{Yes}}
| {{Yes}} since Mac OS 9
| {{Yes}}
| {{Yes}}
| {{Partial}}
| {{Yes}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{Yes}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[Unix File System|UFS1]]
| {{No}}
| {{unk}}
| {{unk}}
| {{Partial}} - read only
| {{No}}
| {{Yes}}
| {{Yes}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
|-
! [[Unix File System|UFS2]]
| {{No}}
| {{unk}}
| {{Partial}} - with DiskInternals Linux Reader<ref name="DiskInternals Linux Reader">[http://www.diskinternals.com/linux-reader/ DiskInternals Linux Reader] is an application for Windows NT that allows reading of Ext2/3/4, ReiserFS, Reiser4, HFS/HFS+, FAT/exFAT, NTFS, ReFS, and UFS2 filesystems.</ref> (read-only)
| {{Partial}} - read only
| {{No}}
| {{No}}
| {{Yes}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
|-
! [[VMware VMFS|VMFS2]]
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{No}}
|-
! [[VMware VMFS|VMFS3]]
| {{No}}
| {{unk}}
| {{unk}}
| {{Partial}} read-only with vmfs<ref name="vmfs">[http://code.google.com/p/vmfs/ vmfs]</ref>
| {{unk}}
| {{unk}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[Veritas File System|VxFS]]
| {{No}}
| {{unk}}
| {{unk}}
| {{Yes}}
| {{No}}
| {{unk}}
| {{No}}
| {{unk}}
| {{Yes}}
| {{Yes}}
| {{unk}}
| {{unk}}
| {{No}}
| {{No}}
| {{unk}}
| {{Yes}}
| {{No}}
|-
! [[XFS]]
| {{No}}
| {{unk}}
| {{unk}}
| {{Yes}} since kernel 2.4
| {{No}}
| {{unk}}
| {{Partial}}: read-only
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{No}}
|-
! [[ZFS]]
| {{No}}
| {{No}}
| {{No}}
| {{yes2}} with 3rd Party kernel module<ref name="Native ZFS for Linux">[http://zfsonlinux.org/ Native ZFS for Linux]</ref> or [[Filesystem in Userspace|FUSE]]<ref name="zfs on fuse">[http://www.wizy.org/wiki/ZFS_on_FUSE ZFS on FUSE]</ref>
| {{No}}
| {{Yes2}} with free 3rd-party software<ref name="Mac ZFS">[http://code.google.com/p/maczfs/ Mac ZFS]</ref>
| {{Yes}}
| {{No}}
| {{Yes}}
| {{No}}
| {{No}}
| {{No}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{unk}}
| {{No}}
|- class="sortbottom"
! File system
! [[DOS]]
! [[Windows 9x]]
! [[Windows NT]]
! [[Linux]]
! [[Mac OS]]
! [[Mac OS X]]
! [[FreeBSD]]
! [[BeOS]]
! [[Solaris (operating system)|Solaris]]
! [[AIX]]
! [[z/OS]]
! [[OS/2]]
! [[Windows CE]]
! [[Windows Mobile]]
! [[VxWorks]]
! [[HP-UX]]
! [[Plan 9 from Bell Labs|Plan 9]]
|}

==See also==
* [[Comparison of archive formats]]
* [[Comparison of file archivers]]
* [[List of archive formats]]
* [[List of file archivers]]
* [[List of file systems]]
* [[List of default file systems]]
* [[List of partition types]]

==Notes==
{{Reflist|2}}

==External links==
*[http://web.archive.org/web/20040407211142/aurora.zemris.fer.hr/filesystems/ A speed comparison of filesystems on Linux 2.4.5] (archived)
* [http://www.debian-administration.org/article/388/Filesystems_ext3_reiser_xfs_jfs_comparison_on_Debian_Etch Filesystems (ext3, reiser, xfs, jfs) comparison on Debian Etch] (April 23, 2006)

{{DEFAULTSORT:Comparison Of File Systems}}
[[Category:Computer file systems| ]]
[[Category:Software comparisons|File systems]]
